<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.account.mapper.CustomOpenCnImgMapper">
  <resultMap id="BaseResultMap" type="com.minigod.protocol.account.model.CustomOpenCnImg">
    <!--@mbg.generated-->
    <!--@Table custom_open_cn_img-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="location_key" jdbcType="CHAR" property="locationKey" />
    <result column="location_type" jdbcType="CHAR" property="locationType" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="error_status" jdbcType="INTEGER" property="errorStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, location_key, location_type, url, create_time, error_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from custom_open_cn_img
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from custom_open_cn_img
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.account.model.CustomOpenCnImg" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into custom_open_cn_img (user_id, location_key, location_type, 
      url, create_time, error_status
      )
    values (#{userId,jdbcType=INTEGER}, #{locationKey,jdbcType=CHAR}, #{locationType,jdbcType=CHAR}, 
      #{url,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{errorStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.account.model.CustomOpenCnImg" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into custom_open_cn_img
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="locationKey != null">
        location_key,
      </if>
      <if test="locationType != null">
        location_type,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="errorStatus != null">
        error_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="locationKey != null">
        #{locationKey,jdbcType=CHAR},
      </if>
      <if test="locationType != null">
        #{locationType,jdbcType=CHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorStatus != null">
        #{errorStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minigod.protocol.account.model.CustomOpenCnImg">
    <!--@mbg.generated-->
    update custom_open_cn_img
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="locationKey != null">
        location_key = #{locationKey,jdbcType=CHAR},
      </if>
      <if test="locationType != null">
        location_type = #{locationType,jdbcType=CHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="errorStatus != null">
        error_status = #{errorStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minigod.protocol.account.model.CustomOpenCnImg">
    <!--@mbg.generated-->
    update custom_open_cn_img
    set user_id = #{userId,jdbcType=INTEGER},
      location_key = #{locationKey,jdbcType=CHAR},
      location_type = #{locationType,jdbcType=CHAR},
      url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      error_status = #{errorStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--auto generated by MybatisCodeHelper on 2020-01-13-->
  <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from custom_open_cn_img
        where user_id=#{userId,jdbcType=INTEGER}
    </select>

<!--auto generated by MybatisCodeHelper on 2020-01-13-->
  <select id="selectOneIdByUserIdAndLocationType" resultType="java.lang.Integer">
    select id
    from custom_open_cn_img
    where user_id=#{userId,jdbcType=INTEGER} and location_type=#{locationType,jdbcType=CHAR}
  </select>

<!--auto generated by MybatisCodeHelper on 2020-01-16-->
  <select id="selectByUserIdAndLocationKeyInAndLocationTypeIn" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from custom_open_cn_img
    <where>user_id=#{userId,jdbcType=INTEGER}
      <if test="locationKeyCollection != null and locationKeyCollection.length > 0">
        and location_key in
        <foreach item="item" index="index" collection="locationKeyCollection"
                 open="(" separator="," close=")">
          #{item,jdbcType=CHAR}
        </foreach>
      </if>
      <if test="locationTypeCollection != null and locationTypeCollection.length > 0">
        and location_type in
        <foreach item="item" index="index" collection="locationTypeCollection"
                 open="(" separator="," close=")">
          #{item,jdbcType=CHAR}
        </foreach>
      </if>
    </where>
  </select>

<!--auto generated by MybatisCodeHelper on 2020-02-17-->
  <select id="selectOneByUserIdAndLocationType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from custom_open_cn_img
        where user_id=#{userId,jdbcType=INTEGER} and location_type=#{locationType,jdbcType=CHAR}
    </select>
</mapper>