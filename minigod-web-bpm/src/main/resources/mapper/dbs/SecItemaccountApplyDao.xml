<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sunline.modules.dbs.dao.SecItemaccountApplyDao">


    <resultMap type="com.sunline.modules.dbs.entity.SecItemaccountApplyEntity" id="secItemaccountApplyMap">
        <result property="id" column="id"/>
        <result property="outsideId" column="outside_id"/>
        <result property="userId" column="user_id"/>
        <result property="userNameEn" column="user_name_en"/>
        <result property="userNameCn" column="user_name_cn"/>
        <result property="state" column="state"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="subAccountNo" column="sub_account_no"/>
        <result property="fundAccount" column="fund_account"/>
        <result property="clientId" column="client_id"/>
        <result property="isFind" column="is_find"/>
        <result property="accountName" column="account_name"/>
        <result property="exportState" column="export_state"/>
    </resultMap>

    <sql id="Base_Column_List" >
		id, 
		outside_id, 
		user_id, 
		user_name_en, 
		user_name_cn, 
		state, 
		create_time, 
		update_time, 
		sub_account_no, 
		fund_account, 
		client_id, 
		is_find, 
		account_name, 
		export_state
    </sql>

	<select id="queryObject" resultType="com.sunline.modules.dbs.entity.SecItemaccountApplyEntity" resultMap="secItemaccountApplyMap">
		select
		<include refid="Base_Column_List" />
		from sec_itemaccount_apply
		where id = #{value}
	</select>

	<select id="queryList" resultType="com.sunline.modules.dbs.entity.SecItemaccountApplyEntity" resultMap="secItemaccountApplyMap">
		select
		<include refid="Base_Column_List" />
		from sec_itemaccount_apply
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="queryListByBean" resultType="com.sunline.modules.dbs.entity.SecItemaccountApplyEntity" resultMap="secItemaccountApplyMap">
        select
        <include refid="Base_Column_List" />
        from sec_itemaccount_apply
        WHERE 1=1
         <if test="exportState!=null">
            and export_state = #{exportState}
        </if>
    </select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sec_itemaccount_apply
	</select>
	 
	<insert id="save" parameterType="com.sunline.modules.dbs.entity.SecItemaccountApplyEntity" keyProperty="id">
		insert into sec_itemaccount_apply
		(
			`outside_id`, 
			`user_id`, 
			`user_name_en`, 
			`user_name_cn`, 
			`state`, 
			`create_time`, 
			`update_time`, 
			`sub_account_no`, 
			`fund_account`, 
			`client_id`, 
			`is_find`, 
			`account_name`, 
			`export_state`
		)
		values
		(
			#{outsideId}, 
			#{userId}, 
			#{userNameEn}, 
			#{userNameCn}, 
			#{state}, 
			#{createTime}, 
			#{updateTime}, 
			#{subAccountNo}, 
			#{fundAccount}, 
			#{clientId}, 
			#{isFind}, 
			#{accountName}, 
			#{exportState}
		)
	</insert>
	 
	<update id="update" parameterType="com.sunline.modules.dbs.entity.SecItemaccountApplyEntity">
		update sec_itemaccount_apply 
		<set>
			<if test="outsideId != null">`outside_id` = #{outsideId}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="userNameEn != null">`user_name_en` = #{userNameEn}, </if>
			<if test="userNameCn != null">`user_name_cn` = #{userNameCn}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="subAccountNo != null">`sub_account_no` = #{subAccountNo}, </if>
			<if test="fundAccount != null">`fund_account` = #{fundAccount}, </if>
			<if test="clientId != null">`client_id` = #{clientId}, </if>
			<if test="isFind != null">`is_find` = #{isFind}, </if>
			<if test="accountName != null">`account_name` = #{accountName}, </if>
			<if test="exportState != null">`export_state` = #{exportState}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sec_itemaccount_apply where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sec_itemaccount_apply where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>