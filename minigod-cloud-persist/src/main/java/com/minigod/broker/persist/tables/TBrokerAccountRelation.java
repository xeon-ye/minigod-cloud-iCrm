package com.minigod.broker.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TBrokerAccountRelation extends AbstractTable {

	static {
		init();
	}

	private TBrokerAccountRelation(){
		super.tableName = "broker_account_relation";
	}

	private TBrokerAccountRelation(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TBrokerAccountRelation getInstance() {
		return new TBrokerAccountRelation();
	}

	public static final TBrokerAccountRelation getInstance(String aliasName) {
		return new TBrokerAccountRelation(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("brokerId", "broker_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("regDate", "reg_date");
		allFieldMap.put("accountStatus", "account_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 经理人ID | bigint(20)
	 */
	public final TableField<Long> brokerId = new TableFieldImpl<Long>(this,"broker_id","brokerId","经理人ID");

	/**
	 * 犇犇号 | int(20)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","犇犇号");

	/**
	 * 注册时间 | date
	 */
	public final DateTableField<Date> regDate = new DateTableFieldImpl<Date>(this,"reg_date","regDate","注册时间");

	/**
	 * 0:已转仓,1:已入金,2:已开户,3:未开户 | int(2)
	 */
	public final TableField<Integer> accountStatus = new TableFieldImpl<Integer>(this,"account_status","accountStatus","0:已转仓,1:已入金,2:已开户,3:未开户");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {id,brokerId,userId,regDate,accountStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TBrokerAccountRelation[table=broker_account_relation]";
	}
}
