package com.minigod.broker.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.math.BigDecimal;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TBrokerCashTransFlow extends AbstractTable {

	static {
		init();
	}

	private TBrokerCashTransFlow(){
		super.tableName = "broker_cash_trans_flow";
	}

	private TBrokerCashTransFlow(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TBrokerCashTransFlow getInstance() {
		return new TBrokerCashTransFlow();
	}

	public static final TBrokerCashTransFlow getInstance(String aliasName) {
		return new TBrokerCashTransFlow(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("flowId", "flow_id");
		allFieldMap.put("accountId", "account_id");
		allFieldMap.put("subjectId", "subject_id");
		allFieldMap.put("accountDate", "account_date");
		allFieldMap.put("incomeType", "income_type");
		allFieldMap.put("withStatus", "with_status");
		allFieldMap.put("amount", "amount");
		allFieldMap.put("frzAmount", "frz_amount");
		allFieldMap.put("riskBalance", "risk_balance");
		allFieldMap.put("actTitle", "act_title");
		allFieldMap.put("actDesc", "act_desc");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 交易流水ID | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"flow_id","flowId","交易流水ID");
	public final TableField<Long> flowId = new TableFieldImpl<Long>(this,"flow_id","flowId","交易流水ID");

	/**
	 * 账户ID | bigint(20)
	 */
	public final TableField<Long> accountId = new TableFieldImpl<Long>(this,"account_id","accountId","账户ID");

	/**
	 * 科目ID | char(4)
	 */
	public final TableField<String> subjectId = new TableFieldImpl<String>(this,"subject_id","subjectId","科目ID");

	/**
	 * 记账日期 | date
	 */
	public final DateTableField<Date> accountDate = new DateTableFieldImpl<Date>(this,"account_date","accountDate","记账日期");

	/**
	 * 收入类型 0:收入 1:提现 | int(2)
	 */
	public final TableField<Integer> incomeType = new TableFieldImpl<Integer>(this,"income_type","incomeType","收入类型 0:收入 1:提现");

	/**
	 * 提现状态 | int(2)
	 */
	public final TableField<Integer> withStatus = new TableFieldImpl<Integer>(this,"with_status","withStatus","提现状态");

	/**
	 * 本次交易金额(扣除风险金) | decimal(16,2)
	 */
	public final TableField<BigDecimal> amount = new TableFieldImpl<BigDecimal>(this,"amount","amount","本次交易金额(扣除风险金)");

	/**
	 * 本次冻结金额 | decimal(16,2)
	 */
	public final TableField<BigDecimal> frzAmount = new TableFieldImpl<BigDecimal>(this,"frz_amount","frzAmount","本次冻结金额");

	/**
	 * 风险金 | decimal(16,2)
	 */
	public final TableField<BigDecimal> riskBalance = new TableFieldImpl<BigDecimal>(this,"risk_balance","riskBalance","风险金");

	/**
	 * 记账标题 | varchar(32)
	 */
	public final TableField<String> actTitle = new TableFieldImpl<String>(this,"act_title","actTitle","记账标题");

	/**
	 * 对本次记账的简要描述 | varchar(256)
	 */
	public final TableField<String> actDesc = new TableFieldImpl<String>(this,"act_desc","actDesc","对本次记账的简要描述");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {flowId,accountId,subjectId,accountDate,incomeType,withStatus,amount,frzAmount,riskBalance,actTitle,actDesc,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TBrokerCashTransFlow[table=broker_cash_trans_flow]";
	}
}
