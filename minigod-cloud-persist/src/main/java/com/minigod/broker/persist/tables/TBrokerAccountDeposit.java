package com.minigod.broker.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.math.BigDecimal;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TBrokerAccountDeposit extends AbstractTable {

	static {
		init();
	}

	private TBrokerAccountDeposit(){
		super.tableName = "broker_account_deposit";
	}

	private TBrokerAccountDeposit(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TBrokerAccountDeposit getInstance() {
		return new TBrokerAccountDeposit();
	}

	public static final TBrokerAccountDeposit getInstance(String aliasName) {
		return new TBrokerAccountDeposit(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("initDate", "init_date");
		allFieldMap.put("tradeAccount", "trade_account");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("amount", "amount");
		allFieldMap.put("currency", "currency");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 资金发生日期 | date
	 */
	public final DateTableField<Date> initDate = new DateTableFieldImpl<Date>(this,"init_date","initDate","资金发生日期");

	/**
	 * 交易账号 | varchar(100)
	 */
	public final TableField<String> tradeAccount = new TableFieldImpl<String>(this,"trade_account","tradeAccount","交易账号");

	/**
	 * 犇犇号 | int(20)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","犇犇号");

	/**
	 * 金额 | decimal(20,5)
	 */
	public final TableField<BigDecimal> amount = new TableFieldImpl<BigDecimal>(this,"amount","amount","金额");

	/**
	 * 货币名称 | varchar(10)
	 */
	public final TableField<String> currency = new TableFieldImpl<String>(this,"currency","currency","货币名称");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {id,initDate,tradeAccount,userId,amount,currency,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TBrokerAccountDeposit[table=broker_account_deposit]";
	}
}
