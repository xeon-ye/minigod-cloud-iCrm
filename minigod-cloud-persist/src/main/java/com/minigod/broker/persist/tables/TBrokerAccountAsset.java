package com.minigod.broker.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.math.BigDecimal;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TBrokerAccountAsset extends AbstractTable {

	static {
		init();
	}

	private TBrokerAccountAsset(){
		super.tableName = "broker_account_asset";
	}

	private TBrokerAccountAsset(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TBrokerAccountAsset getInstance() {
		return new TBrokerAccountAsset();
	}

	public static final TBrokerAccountAsset getInstance(String aliasName) {
		return new TBrokerAccountAsset(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("brokerId", "broker_id");
		allFieldMap.put("tradeDate", "trade_date");
		allFieldMap.put("addAccountAmount", "add_account_amount");
		allFieldMap.put("accountAmount", "account_amount");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 经理人ID | bigint(20)
	 */
	public final TableField<Long> brokerId = new TableFieldImpl<Long>(this,"broker_id","brokerId","经理人ID");

	/**
	 * 交易日 | date
	 */
	public final DateTableField<Date> tradeDate = new DateTableFieldImpl<Date>(this,"trade_date","tradeDate","交易日");

	/**
	 * 新增资产 | decimal(16,2)
	 */
	public final TableField<BigDecimal> addAccountAmount = new TableFieldImpl<BigDecimal>(this,"add_account_amount","addAccountAmount","新增资产");

	/**
	 * 客户资产 | decimal(16,2)
	 */
	public final TableField<BigDecimal> accountAmount = new TableFieldImpl<BigDecimal>(this,"account_amount","accountAmount","客户资产");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {id,brokerId,tradeDate,addAccountAmount,accountAmount,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TBrokerAccountAsset[table=broker_account_asset]";
	}
}
