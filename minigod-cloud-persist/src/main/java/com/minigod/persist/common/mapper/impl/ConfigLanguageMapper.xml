<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.persist.common.mapper.ConfigLanguageMapper">
  <resultMap id="BaseResultMap" type="com.minigod.protocol.common.model.ConfigLanguage">
    <!--@mbg.generated-->
    <!--@Table config_language-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="config_key" jdbcType="VARCHAR" property="configKey" />
    <result column="lang_key" jdbcType="VARCHAR" property="langKey" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="marks" jdbcType="VARCHAR" property="marks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, config_key, lang_key, content, marks, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from config_language
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from config_language
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.common.model.ConfigLanguage" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into config_language (config_key, lang_key, content, 
      marks, create_time, update_time
      )
    values (#{configKey,jdbcType=VARCHAR}, #{langKey,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{marks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.common.model.ConfigLanguage" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into config_language
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configKey != null">
        config_key,
      </if>
      <if test="langKey != null">
        lang_key,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="marks != null">
        marks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configKey != null">
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="langKey != null">
        #{langKey,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="marks != null">
        #{marks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minigod.protocol.common.model.ConfigLanguage">
    <!--@mbg.generated-->
    update config_language
    <set>
      <if test="configKey != null">
        config_key = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="langKey != null">
        lang_key = #{langKey,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="marks != null">
        marks = #{marks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minigod.protocol.common.model.ConfigLanguage">
    <!--@mbg.generated-->
    update config_language
    set config_key = #{configKey,jdbcType=VARCHAR},
      lang_key = #{langKey,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      marks = #{marks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--auto generated by MybatisCodeHelper on 2020-04-05-->
  <select id="selectOneByConfigKeyAndLangKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from config_language
        where config_key=#{configKey,jdbcType=VARCHAR} and lang_key=#{langKey,jdbcType=VARCHAR}
    </select>

<!--auto generated by MybatisCodeHelper on 2020-04-05-->
  <select id="selectContentByConfigKeyInAndLangKey" resultType="java.lang.String">
    select content
    from config_language
    where config_key in
    <foreach item="item" index="index" collection="configKeyCollection"
             open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
    and lang_key=#{langKey,jdbcType=VARCHAR}
  </select>
</mapper>