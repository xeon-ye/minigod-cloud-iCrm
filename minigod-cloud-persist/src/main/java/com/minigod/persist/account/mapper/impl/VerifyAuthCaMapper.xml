<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.persist.account.mapper.VerifyAuthCaMapper">
  <resultMap id="BaseResultMap" type="com.minigod.protocol.account.model.VerifyAuthCa">
    <!--@mbg.generated-->
    <!--@Table verify_auth_ca-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="cert_dn" jdbcType="VARCHAR" property="certDn" />
    <result column="cert_sn" jdbcType="VARCHAR" property="certSn" />
    <result column="file_hash" jdbcType="VARCHAR" property="fileHash" />
    <result column="file_id" jdbcType="VARCHAR" property="fileId" />
    <result column="file_pdf_url" jdbcType="VARCHAR" property="filePdfUrl" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="check_count" jdbcType="INTEGER" property="checkCount" />
    <result column="check_date" jdbcType="TIMESTAMP" property="checkDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, id_card, user_name, cert_dn, cert_sn, file_hash, file_id, file_pdf_url, `status`, 
    remark, check_count, check_date, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from verify_auth_ca
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from verify_auth_ca
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.account.model.VerifyAuthCa" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into verify_auth_ca (id_card, user_name, cert_dn, 
      cert_sn, file_hash, file_id, 
      file_pdf_url, `status`, remark, 
      check_count, check_date, create_time, 
      update_time)
    values (#{idCard,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{certDn,jdbcType=VARCHAR}, 
      #{certSn,jdbcType=VARCHAR}, #{fileHash,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, 
      #{filePdfUrl,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{checkCount,jdbcType=INTEGER}, #{checkDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.account.model.VerifyAuthCa" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into verify_auth_ca
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idCard != null">
        id_card,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="certDn != null">
        cert_dn,
      </if>
      <if test="certSn != null">
        cert_sn,
      </if>
      <if test="fileHash != null">
        file_hash,
      </if>
      <if test="fileId != null">
        file_id,
      </if>
      <if test="filePdfUrl != null">
        file_pdf_url,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="checkCount != null">
        check_count,
      </if>
      <if test="checkDate != null">
        check_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="certDn != null">
        #{certDn,jdbcType=VARCHAR},
      </if>
      <if test="certSn != null">
        #{certSn,jdbcType=VARCHAR},
      </if>
      <if test="fileHash != null">
        #{fileHash,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="filePdfUrl != null">
        #{filePdfUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="checkCount != null">
        #{checkCount,jdbcType=INTEGER},
      </if>
      <if test="checkDate != null">
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minigod.protocol.account.model.VerifyAuthCa">
    <!--@mbg.generated-->
    update verify_auth_ca
    <set>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="certDn != null">
        cert_dn = #{certDn,jdbcType=VARCHAR},
      </if>
      <if test="certSn != null">
        cert_sn = #{certSn,jdbcType=VARCHAR},
      </if>
      <if test="fileHash != null">
        file_hash = #{fileHash,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="filePdfUrl != null">
        file_pdf_url = #{filePdfUrl,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="checkCount != null">
        check_count = #{checkCount,jdbcType=INTEGER},
      </if>
      <if test="checkDate != null">
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minigod.protocol.account.model.VerifyAuthCa">
    <!--@mbg.generated-->
    update verify_auth_ca
    set id_card = #{idCard,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      cert_dn = #{certDn,jdbcType=VARCHAR},
      cert_sn = #{certSn,jdbcType=VARCHAR},
      file_hash = #{fileHash,jdbcType=VARCHAR},
      file_id = #{fileId,jdbcType=VARCHAR},
      file_pdf_url = #{filePdfUrl,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      check_count = #{checkCount,jdbcType=INTEGER},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--auto generated by MybatisCodeHelper on 2020-04-01-->
  <select id="selectOneByIdCard" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from verify_auth_ca
        where id_card=#{idCard,jdbcType=VARCHAR}
    </select>

<!--auto generated by MybatisCodeHelper on 2020-04-01-->
  <select id="selectOneByCertDn" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from verify_auth_ca
    where cert_dn=#{certDn,jdbcType=VARCHAR}
  </select>
</mapper>