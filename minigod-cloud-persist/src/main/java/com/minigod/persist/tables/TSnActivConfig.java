package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSnActivConfig extends AbstractTable {

	static {
		init();
	}

	private TSnActivConfig(){
		super.tableName = "sn_activ_config";
	}

	private TSnActivConfig(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSnActivConfig getInstance() {
		return new TSnActivConfig();
	}

	public static final TSnActivConfig getInstance(String aliasName) {
		return new TSnActivConfig(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("activeConfigId", "active_config_id");
		allFieldMap.put("activeName", "active_name");
		allFieldMap.put("activeType", "active_type");
		allFieldMap.put("startTime", "start_time");
		allFieldMap.put("endTime", "end_time");
		allFieldMap.put("remark", "remark");
		allFieldMap.put("status", "status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"active_config_id","activeConfigId","");
	public final TableField<Long> activeConfigId = new TableFieldImpl<Long>(this,"active_config_id","activeConfigId","");

	/**
	 * 活动名称 | varchar(50)
	 */
	public final TableField<String> activeName = new TableFieldImpl<String>(this,"active_name","activeName","活动名称");

	/**
	 * 1、开户 2、入金 3、转仓 | tinyint(4)
	 */
	public final TableField<Integer> activeType = new TableFieldImpl<Integer>(this,"active_type","activeType","1、开户 2、入金 3、转仓");

	/**
	 * 活动开始日期 | datetime
	 */
	public final DateTableField<Date> startTime = new DateTableFieldImpl<Date>(this,"start_time","startTime","活动开始日期");

	/**
	 * 活动结束日期 | datetime
	 */
	public final DateTableField<Date> endTime = new DateTableFieldImpl<Date>(this,"end_time","endTime","活动结束日期");

	/**
	 * 活动备注 | varchar(200)
	 */
	public final TableField<String> remark = new TableFieldImpl<String>(this,"remark","remark","活动备注");

	/**
	 * 记录状态 0有效 1失效 | tinyint(4)
	 */
	public final TableField<Integer> status = new TableFieldImpl<Integer>(this,"status","status","记录状态 0有效 1失效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	private final TableField<?>[] allFields = new TableField<?>[] {activeConfigId,activeName,activeType,startTime,endTime,remark,status,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSnActivConfig[table=sn_activ_config]";
	}
}
