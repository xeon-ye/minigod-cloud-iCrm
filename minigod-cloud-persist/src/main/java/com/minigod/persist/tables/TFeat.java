package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TFeat extends AbstractTable {

	static {
		init();
	}

	private TFeat(){
		super.tableName = "feat";
	}

	private TFeat(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TFeat getInstance() {
		return new TFeat();
	}

	public static final TFeat getInstance(String aliasName) {
		return new TFeat(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("featId", "feat_id");
		allFieldMap.put("featName", "feat_name");
		allFieldMap.put("featDescribe", "feat_describe");
		allFieldMap.put("featImage", "feat_image");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 功勋id | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"feat_id","featId","功勋id");
	public final TableField<Integer> featId = new TableFieldImpl<Integer>(this,"feat_id","featId","功勋id");

	/**
	 *  | varchar(50)
	 */
	public final TableField<String> featName = new TableFieldImpl<String>(this,"feat_name","featName","");

	/**
	 * 功勋描述 | varchar(1000)
	 */
	public final TableField<String> featDescribe = new TableFieldImpl<String>(this,"feat_describe","featDescribe","功勋描述");

	/**
	 * 功勋图片地址 | varchar(200)
	 */
	public final TableField<String> featImage = new TableFieldImpl<String>(this,"feat_image","featImage","功勋图片地址");

	private final TableField<?>[] allFields = new TableField<?>[] {featId,featName,featDescribe,featImage};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TFeat[table=feat]";
	}
}
