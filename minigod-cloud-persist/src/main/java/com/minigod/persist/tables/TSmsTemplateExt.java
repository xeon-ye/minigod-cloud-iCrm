package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSmsTemplateExt extends AbstractTable {

	static {
		init();
	}

	private TSmsTemplateExt(){
		super.tableName = "sms_template_ext";
	}

	private TSmsTemplateExt(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSmsTemplateExt getInstance() {
		return new TSmsTemplateExt();
	}

	public static final TSmsTemplateExt getInstance(String aliasName) {
		return new TSmsTemplateExt(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("templateExtId", "template_ext_id");
		allFieldMap.put("code", "code");
		allFieldMap.put("keyName", "key_name");
		allFieldMap.put("keyValue", "key_value");
		allFieldMap.put("remark", "remark");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("createOpr", "create_opr");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("updateOpr", "update_opr");
		allFieldMap.put("isStatus", "is_status");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 消息模板扩展表id | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"template_ext_id","templateExtId","消息模板扩展表id");
	public final TableField<Integer> templateExtId = new TableFieldImpl<Integer>(this,"template_ext_id","templateExtId","消息模板扩展表id");

	/**
	 * 消息代码 | int(4)
	 */
	public final TableField<Integer> code = new TableFieldImpl<Integer>(this,"code","code","消息代码");

	/**
	 *  | varchar(50)
	 */
	public final TableField<String> keyName = new TableFieldImpl<String>(this,"key_name","keyName","");

	/**
	 *  | varchar(500)
	 */
	public final TableField<String> keyValue = new TableFieldImpl<String>(this,"key_value","keyValue","");

	/**
	 *  | varchar(500)
	 */
	public final TableField<String> remark = new TableFieldImpl<String>(this,"remark","remark","");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 创建人 | int(11)
	 */
	public final TableField<Integer> createOpr = new TableFieldImpl<Integer>(this,"create_opr","createOpr","创建人");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	/**
	 * 修改人 | int(11)
	 */
	public final TableField<Integer> updateOpr = new TableFieldImpl<Integer>(this,"update_opr","updateOpr","修改人");

	/**
	 * 有效标志 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","有效标志");

	private final TableField<?>[] allFields = new TableField<?>[] {templateExtId,code,keyName,keyValue,remark,createTime,createOpr,updateTime,updateOpr,isStatus};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSmsTemplateExt[table=sms_template_ext]";
	}
}
