package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserCommissionRecord extends AbstractTable {

	static {
		init();
	}

	private TUserCommissionRecord(){
		super.tableName = "user_commission_record";
	}

	private TUserCommissionRecord(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserCommissionRecord getInstance() {
		return new TUserCommissionRecord();
	}

	public static final TUserCommissionRecord getInstance(String aliasName) {
		return new TUserCommissionRecord(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("fundAccount", "fund_account");
		allFieldMap.put("clientId", "client_id");
		allFieldMap.put("exchangeType", "exchange_type");
		allFieldMap.put("params", "params");
		allFieldMap.put("startDate", "start_date");
		allFieldMap.put("endDate", "end_date");
		allFieldMap.put("rewardId", "reward_id");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("status", "status");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","");

	/**
	 *  | varchar(20)
	 */
	public final TableField<String> fundAccount = new TableFieldImpl<String>(this,"fund_account","fundAccount","");

	/**
	 *  | varchar(20)
	 */
	public final TableField<String> clientId = new TableFieldImpl<String>(this,"client_id","clientId","");

	/**
	 *  | char(2)
	 */
	public final TableField<String> exchangeType = new TableFieldImpl<String>(this,"exchange_type","exchangeType","");

	/**
	 *  | varchar(4000)
	 */
	public final TableField<String> params = new TableFieldImpl<String>(this,"params","params","");

	/**
	 *  | date
	 */
	public final DateTableField<Date> startDate = new DateTableFieldImpl<Date>(this,"start_date","startDate","");

	/**
	 *  | date
	 */
	public final DateTableField<Date> endDate = new DateTableFieldImpl<Date>(this,"end_date","endDate","");

	/**
	 * 奖励记录id | bigint(20)
	 */
	public final TableField<Long> rewardId = new TableFieldImpl<Long>(this,"reward_id","rewardId","奖励记录id");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","");

	/**
	 * 0 生效 1 失效 | tinyint(4)
	 */
	public final TableField<Integer> status = new TableFieldImpl<Integer>(this,"status","status","0 生效 1 失效");

	private final TableField<?>[] allFields = new TableField<?>[] {id,userId,fundAccount,clientId,exchangeType,params,startDate,endDate,rewardId,createTime,updateTime,status};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TUserCommissionRecord[table=user_commission_record]";
	}
}
