package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TGrmDictionary extends AbstractTable {

	static {
		init();
	}

	private TGrmDictionary(){
		super.tableName = "grm_dictionary";
	}

	private TGrmDictionary(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TGrmDictionary getInstance() {
		return new TGrmDictionary();
	}

	public static final TGrmDictionary getInstance(String aliasName) {
		return new TGrmDictionary(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("dictId", "dict_id");
		allFieldMap.put("entryCode", "entry_code");
		allFieldMap.put("entryName", "entry_name");
		allFieldMap.put("dictCode", "dict_code");
		allFieldMap.put("dictName", "dict_name");
		allFieldMap.put("dictDesc", "dict_desc");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"dict_id","dictId","");
	public final TableField<Integer> dictId = new TableFieldImpl<Integer>(this,"dict_id","dictId","");

	/**
	 *  | varchar(8)
	 */
	public final TableField<String> entryCode = new TableFieldImpl<String>(this,"entry_code","entryCode","");

	/**
	 *  | varchar(32)
	 */
	public final TableField<String> entryName = new TableFieldImpl<String>(this,"entry_name","entryName","");

	/**
	 *  | varchar(8)
	 */
	public final TableField<String> dictCode = new TableFieldImpl<String>(this,"dict_code","dictCode","");

	/**
	 *  | varchar(32)
	 */
	public final TableField<String> dictName = new TableFieldImpl<String>(this,"dict_name","dictName","");

	/**
	 *  | varchar(64)
	 */
	public final TableField<String> dictDesc = new TableFieldImpl<String>(this,"dict_desc","dictDesc","");

	private final TableField<?>[] allFields = new TableField<?>[] {dictId,entryCode,entryName,dictCode,dictName,dictDesc};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TGrmDictionary[table=grm_dictionary]";
	}
}
