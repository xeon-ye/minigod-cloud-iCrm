package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TCashSubject extends AbstractTable {

	static {
		init();
	}

	private TCashSubject(){
		super.tableName = "cash_subject";
	}

	private TCashSubject(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TCashSubject getInstance() {
		return new TCashSubject();
	}

	public static final TCashSubject getInstance(String aliasName) {
		return new TCashSubject(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("subjectId", "subject_id");
		allFieldMap.put("name", "name");
		allFieldMap.put("type", "type");
		allFieldMap.put("direction", "direction");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 科目编号/科目ID | char(4)
	 */
	public final TableField<String>  pk = new TableFieldImpl<String>(this,"subject_id","subjectId","科目编号/科目ID");
	public final TableField<String> subjectId = new TableFieldImpl<String>(this,"subject_id","subjectId","科目编号/科目ID");

	/**
	 * 科目名称 | varchar(30)
	 */
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","科目名称");

	/**
	 * 科目所属分类 | tinyint(4)
	 */
	public final TableField<Integer> type = new TableFieldImpl<Integer>(this,"type","type","科目所属分类");

	/**
	 * 余额方向 | char(1)
	 */
	public final TableField<String> direction = new TableFieldImpl<String>(this,"direction","direction","余额方向");

	/**
	 * 记录状态 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","记录状态");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {subjectId,name,type,direction,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TCashSubject[table=cash_subject]";
	}
}
