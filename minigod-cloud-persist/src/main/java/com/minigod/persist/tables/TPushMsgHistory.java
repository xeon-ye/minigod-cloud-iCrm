package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TPushMsgHistory extends AbstractTable {

	static {
		init();
	}

	private TPushMsgHistory(){
		super.tableName = "push_msg_history";
	}

	private TPushMsgHistory(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TPushMsgHistory getInstance() {
		return new TPushMsgHistory();
	}

	public static final TPushMsgHistory getInstance(String aliasName) {
		return new TPushMsgHistory(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("tempCode", "temp_code");
		allFieldMap.put("osType", "os_type");
		allFieldMap.put("msgGroup", "msg_group");
		allFieldMap.put("targetId", "target_id");
		allFieldMap.put("content", "content");
		allFieldMap.put("sendStatus", "send_status");
		allFieldMap.put("sendTime", "send_time");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("relationId", "relation_id");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 模板编码 | int(10)
	 */
	public final TableField<Integer> tempCode = new TableFieldImpl<Integer>(this,"temp_code","tempCode","模板编码");

	/**
	 * 客户端类型(0-安卓，1-IOS，2-WP系统，3-全部) | int(1)
	 */
	public final TableField<Integer> osType = new TableFieldImpl<Integer>(this,"os_type","osType","客户端类型(0-安卓，1-IOS，2-WP系统，3-全部)");

	/**
	 * 消息分组(P-个人，A-全站，L-标签用户，T-用户分组) | char(1)
	 */
	public final TableField<String> msgGroup = new TableFieldImpl<String>(this,"msg_group","msgGroup","消息分组(P-个人，A-全站，L-标签用户，T-用户分组)");

	/**
	 * msg_group=P时,记录为用户id;当msg_group=A时,为0 | int(11)
	 */
	public final TableField<Integer> targetId = new TableFieldImpl<Integer>(this,"target_id","targetId","msg_group=P时,记录为用户id;当msg_group=A时,为0");

	/**
	 *  | varchar(255)
	 */
	public final TableField<String> content = new TableFieldImpl<String>(this,"content","content","");

	/**
	 * 推送状态(0-未发送 1-发送成功 2-发送失败) | int(1)
	 */
	public final TableField<Integer> sendStatus = new TableFieldImpl<Integer>(this,"send_status","sendStatus","推送状态(0-未发送 1-发送成功 2-发送失败)");

	/**
	 * 发送时间 | datetime
	 */
	public final DateTableField<Date> sendTime = new DateTableFieldImpl<Date>(this,"send_time","sendTime","发送时间");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 关联id | int(11)
	 */
	public final TableField<Integer> relationId = new TableFieldImpl<Integer>(this,"relation_id","relationId","关联id");

	private final TableField<?>[] allFields = new TableField<?>[] {id,tempCode,osType,msgGroup,targetId,content,sendStatus,sendTime,createTime,relationId};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TPushMsgHistory[table=push_msg_history]";
	}
}
