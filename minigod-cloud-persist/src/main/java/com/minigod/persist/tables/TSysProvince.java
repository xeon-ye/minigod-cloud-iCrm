package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TSysProvince extends AbstractTable {

	static {
		init();
	}

	private TSysProvince(){
		super.tableName = "sys_province";
	}

	private TSysProvince(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSysProvince getInstance() {
		return new TSysProvince();
	}

	public static final TSysProvince getInstance(String aliasName) {
		return new TSysProvince(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("name", "name");
		allFieldMap.put("simpleName", "simple_name");
		allFieldMap.put("keyTitle", "key_title");
		allFieldMap.put("status", "status");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","主键");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","主键");

	/**
	 * 省 | char(255)
	 */
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","省");

	/**
	 * 省简写 | char(255)
	 */
	public final TableField<String> simpleName = new TableFieldImpl<String>(this,"simple_name","simpleName","省简写");

	/**
	 * 拼音首字符 | char(255)
	 */
	public final TableField<String> keyTitle = new TableFieldImpl<String>(this,"key_title","keyTitle","拼音首字符");

	/**
	 * 是否有效，1为有效，0未无效 | int(10)
	 */
	public final TableField<Integer> status = new TableFieldImpl<Integer>(this,"status","status","是否有效，1为有效，0未无效");

	private final TableField<?>[] allFields = new TableField<?>[] {id,name,simpleName,keyTitle,status};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSysProvince[table=sys_province]";
	}
}
