package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSnFeatTaskType extends AbstractTable {

	static {
		init();
	}

	private TSnFeatTaskType(){
		super.tableName = "sn_feat_task_type";
	}

	private TSnFeatTaskType(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSnFeatTaskType getInstance() {
		return new TSnFeatTaskType();
	}

	public static final TSnFeatTaskType getInstance(String aliasName) {
		return new TSnFeatTaskType(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("featTaskTypeId", "feat_task_type_id");
		allFieldMap.put("featId", "feat_id");
		allFieldMap.put("taskType", "task_type");
		allFieldMap.put("taskTypeDesc", "task_type_desc");
		allFieldMap.put("featValue", "feat_value");
		allFieldMap.put("creator", "creator");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("modifier", "modifier");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"feat_task_type_id","featTaskTypeId","");
	public final TableField<Integer> featTaskTypeId = new TableFieldImpl<Integer>(this,"feat_task_type_id","featTaskTypeId","");

	/**
	 * 功勋id | int(11)
	 */
	public final TableField<Integer> featId = new TableFieldImpl<Integer>(this,"feat_id","featId","功勋id");

	/**
	 * 任务的任务类型（任务类型可以理解为任务编码，即对应具体的任务） | varchar(45)
	 */
	public final TableField<String> taskType = new TableFieldImpl<String>(this,"task_type","taskType","任务的任务类型（任务类型可以理解为任务编码，即对应具体的任务）");

	/**
	 * 任务类型描述 | varchar(100)
	 */
	public final TableField<String> taskTypeDesc = new TableFieldImpl<String>(this,"task_type_desc","taskTypeDesc","任务类型描述");

	/**
	 * 完成该任务类型对应的功勋值 | int(11)
	 */
	public final TableField<Integer> featValue = new TableFieldImpl<Integer>(this,"feat_value","featValue","完成该任务类型对应的功勋值");

	/**
	 * 创建者 | varchar(45)
	 */
	public final TableField<String> creator = new TableFieldImpl<String>(this,"creator","creator","创建者");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改者 | varchar(45)
	 */
	public final TableField<String> modifier = new TableFieldImpl<String>(this,"modifier","modifier","修改者");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {featTaskTypeId,featId,taskType,taskTypeDesc,featValue,creator,createTime,modifier,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSnFeatTaskType[table=sn_feat_task_type]";
	}
}
