package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAdGiftInfo extends AbstractTable {

	static {
		init();
	}

	private TAdGiftInfo(){
		super.tableName = "ad_gift_info";
	}

	private TAdGiftInfo(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAdGiftInfo getInstance() {
		return new TAdGiftInfo();
	}

	public static final TAdGiftInfo getInstance(String aliasName) {
		return new TAdGiftInfo(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("adGiftId", "ad_gift_id");
		allFieldMap.put("adId", "ad_id");
		allFieldMap.put("giftImg", "gift_img");
		allFieldMap.put("giftNum", "gift_num");
		allFieldMap.put("giftDesc", "gift_desc");
		allFieldMap.put("unitNum", "unit_num");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("createTime", "create_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"ad_gift_id","adGiftId","");
	public final TableField<Integer> adGiftId = new TableFieldImpl<Integer>(this,"ad_gift_id","adGiftId","");

	/**
	 * 广告id | int(11)
	 */
	public final TableField<Integer> adId = new TableFieldImpl<Integer>(this,"ad_id","adId","广告id");

	/**
	 * 奖品图片路径 | varchar(200)
	 */
	public final TableField<String> giftImg = new TableFieldImpl<String>(this,"gift_img","giftImg","奖品图片路径");

	/**
	 * 奖品数量 | int(11)
	 */
	public final TableField<Integer> giftNum = new TableFieldImpl<Integer>(this,"gift_num","giftNum","奖品数量");

	/**
	 * 奖品介绍 | varchar(100)
	 */
	public final TableField<String> giftDesc = new TableFieldImpl<String>(this,"gift_desc","giftDesc","奖品介绍");

	/**
	 * 兑换奖品所需的单位数量 | int(11)
	 */
	public final TableField<Integer> unitNum = new TableFieldImpl<Integer>(this,"unit_num","unitNum","兑换奖品所需的单位数量");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	private final TableField<?>[] allFields = new TableField<?>[] {adGiftId,adId,giftImg,giftNum,giftDesc,unitNum,updateTime,createTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAdGiftInfo[table=ad_gift_info]";
	}
}
