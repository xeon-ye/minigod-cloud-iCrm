package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSecAccImg extends AbstractTable {

	static {
		init();
	}

	private TSecAccImg(){
		super.tableName = "sec_acc_img";
	}

	private TSecAccImg(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSecAccImg getInstance() {
		return new TSecAccImg();
	}

	public static final TSecAccImg getInstance(String aliasName) {
		return new TSecAccImg(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("accImgId", "acc_img_id");
		allFieldMap.put("accImgPath", "acc_img_path");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("imageLocationType", "imageLocationType");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("errorStatus", "error_status");
		allFieldMap.put("isFind", "is_find");
		allFieldMap.put("serviceType", "service_type");
		allFieldMap.put("transactId", "transact_id");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 图片的id | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"acc_img_id","accImgId","图片的id");
	public final TableField<Long> accImgId = new TableFieldImpl<Long>(this,"acc_img_id","accImgId","图片的id");

	/**
	 * 存入的路径 | varchar(200)
	 */
	public final TableField<String> accImgPath = new TableFieldImpl<String>(this,"acc_img_path","accImgPath","存入的路径");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 图片类型 | char(3)
	 */
	public final TableField<String> imageLocationType = new TableFieldImpl<String>(this,"imageLocationType","imageLocationType","图片类型");

	/**
	 * 用户ID | int(20)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 错误图片状态 | tinyint(4)
	 */
	public final TableField<Integer> errorStatus = new TableFieldImpl<Integer>(this,"error_status","errorStatus","错误图片状态");

	/**
	 * 是否全部加载 0 否 1 是 | tinyint(4)
	 */
	public final TableField<Integer> isFind = new TableFieldImpl<Integer>(this,"is_find","isFind","是否全部加载 0 否 1 是");

	/**
	 * 图片业务类型 1表示存入资金 2转入股票 | tinyint(4)
	 */
	public final TableField<Integer> serviceType = new TableFieldImpl<Integer>(this,"service_type","serviceType","图片业务类型 1表示存入资金 2转入股票");

	/**
	 * 图片对应交易流水号 | bigint(20)
	 */
	public final TableField<Long> transactId = new TableFieldImpl<Long>(this,"transact_id","transactId","图片对应交易流水号");

	private final TableField<?>[] allFields = new TableField<?>[] {accImgId,accImgPath,createTime,imageLocationType,userId,errorStatus,isFind,serviceType,transactId};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSecAccImg[table=sec_acc_img]";
	}
}
