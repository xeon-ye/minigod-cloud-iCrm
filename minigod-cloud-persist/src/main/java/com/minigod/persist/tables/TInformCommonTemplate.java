package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TInformCommonTemplate extends AbstractTable {

	static {
		init();
	}

	private TInformCommonTemplate(){
		super.tableName = "inform_common_template";
	}

	private TInformCommonTemplate(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TInformCommonTemplate getInstance() {
		return new TInformCommonTemplate();
	}

	public static final TInformCommonTemplate getInstance(String aliasName) {
		return new TInformCommonTemplate(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("busId", "bus_id");
		allFieldMap.put("tempCode", "temp_code");
		allFieldMap.put("title", "title");
		allFieldMap.put("content", "content");
		allFieldMap.put("applyExplain", "apply_explain");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("msgType", "msg_type");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 业务类型ID | bigint(20)
	 */
	public final TableField<Long> busId = new TableFieldImpl<Long>(this,"bus_id","busId","业务类型ID");

	/**
	 * 模板类型编码 | int(10)
	 */
	public final TableField<Integer> tempCode = new TableFieldImpl<Integer>(this,"temp_code","tempCode","模板类型编码");

	/**
	 * 标题 | varchar(100)
	 */
	public final TableField<String> title = new TableFieldImpl<String>(this,"title","title","标题");

	/**
	 * 内容 | varchar(2000)
	 */
	public final TableField<String> content = new TableFieldImpl<String>(this,"content","content","内容");

	/**
	 * 申请说明 | varchar(500)
	 */
	public final TableField<String> applyExplain = new TableFieldImpl<String>(this,"apply_explain","applyExplain","申请说明");

	/**
	 * 是否有效(0-无效，1-有效) | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","是否有效(0-无效，1-有效)");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	/**
	 * 短信类型 | int(11)
	 */
	public final TableField<Integer> msgType = new TableFieldImpl<Integer>(this,"msg_type","msgType","短信类型");

	private final TableField<?>[] allFields = new TableField<?>[] {id,busId,tempCode,title,content,applyExplain,isStatus,createTime,updateTime,msgType};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TInformCommonTemplate[table=inform_common_template]";
	}
}
