package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TPtfNote extends AbstractTable {

	static {
		init();
	}

	private TPtfNote(){
		super.tableName = "ptf_note";
	}

	private TPtfNote(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TPtfNote getInstance() {
		return new TPtfNote();
	}

	public static final TPtfNote getInstance(String aliasName) {
		return new TPtfNote(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("ptfNoteId", "ptf_note_id");
		allFieldMap.put("cNoteId", "c_note_id");
		allFieldMap.put("ptfId", "ptf_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("ptfCreatorId", "ptf_creator_id");
		allFieldMap.put("noteType", "note_type");
		allFieldMap.put("busContent", "bus_content");
		allFieldMap.put("isReal", "is_real");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("ptfTransId", "ptf_trans_id");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 日历ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"ptf_note_id","ptfNoteId","日历ID");
	public final TableField<Integer> ptfNoteId = new TableFieldImpl<Integer>(this,"ptf_note_id","ptfNoteId","日历ID");

	/**
	 *  | varchar(50)
	 */
	public final TableField<String> cNoteId = new TableFieldImpl<String>(this,"c_note_id","cNoteId","");

	/**
	 * 组合ID | int(11)
	 */
	public final TableField<Integer> ptfId = new TableFieldImpl<Integer>(this,"ptf_id","ptfId","组合ID");

	/**
	 * 用户ID | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 组合创建人Id | int(11)
	 */
	public final TableField<Integer> ptfCreatorId = new TableFieldImpl<Integer>(this,"ptf_creator_id","ptfCreatorId","组合创建人Id");

	/**
	 * 日历类型 | char(1)
	 */
	public final TableField<String> noteType = new TableFieldImpl<String>(this,"note_type","noteType","日历类型");

	/**
	 *  | varchar(5000)
	 */
	public final TableField<String> busContent = new TableFieldImpl<String>(this,"bus_content","busContent","");

	/**
	 * 是否实盘 | tinyint(1)
	 */
	public final TableField<Boolean> isReal = new TableFieldImpl<Boolean>(this,"is_real","isReal","是否实盘");

	/**
	 * 记录状态 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","记录状态");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> ptfTransId = new TableFieldImpl<Integer>(this,"ptf_trans_id","ptfTransId","");

	private final TableField<?>[] allFields = new TableField<?>[] {ptfNoteId,cNoteId,ptfId,userId,ptfCreatorId,noteType,busContent,isReal,isStatus,createTime,updateTime,ptfTransId};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TPtfNote[table=ptf_note]";
	}
}
