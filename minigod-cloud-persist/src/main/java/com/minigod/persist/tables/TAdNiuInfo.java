package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAdNiuInfo extends AbstractTable {

	static {
		init();
	}

	private TAdNiuInfo(){
		super.tableName = "ad_niu_info";
	}

	private TAdNiuInfo(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAdNiuInfo getInstance() {
		return new TAdNiuInfo();
	}

	public static final TAdNiuInfo getInstance(String aliasName) {
		return new TAdNiuInfo(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("niuId", "niu_id");
		allFieldMap.put("adId", "ad_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("ptfId", "ptf_id");
		allFieldMap.put("limitNum", "limit_num");
		allFieldMap.put("yield", "yield");
		allFieldMap.put("niuDesc", "niu_desc");
		allFieldMap.put("createOpr", "create_opr");
		allFieldMap.put("updateOpr", "update_opr");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"niu_id","niuId","主键");
	public final TableField<Integer> niuId = new TableFieldImpl<Integer>(this,"niu_id","niuId","主键");

	/**
	 * 广告id | int(11)
	 */
	public final TableField<Integer> adId = new TableFieldImpl<Integer>(this,"ad_id","adId","广告id");

	/**
	 * 用户id | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户id");

	/**
	 * 组合id | int(11)
	 */
	public final TableField<Integer> ptfId = new TableFieldImpl<Integer>(this,"ptf_id","ptfId","组合id");

	/**
	 * 参与抢购好友数量 | int(11)
	 */
	public final TableField<Integer> limitNum = new TableFieldImpl<Integer>(this,"limit_num","limitNum","参与抢购好友数量");

	/**
	 * M-月收益率,C-累计收益率 | char(1)
	 */
	public final TableField<String> yield = new TableFieldImpl<String>(this,"yield","yield","M-月收益率,C-累计收益率");

	/**
	 * 牛人简介 | varchar(200)
	 */
	public final TableField<String> niuDesc = new TableFieldImpl<String>(this,"niu_desc","niuDesc","牛人简介");

	/**
	 * 创建人 | int(11)
	 */
	public final TableField<Integer> createOpr = new TableFieldImpl<Integer>(this,"create_opr","createOpr","创建人");

	/**
	 * 更新人 | int(11)
	 */
	public final TableField<Integer> updateOpr = new TableFieldImpl<Integer>(this,"update_opr","updateOpr","更新人");

	/**
	 * 0-不参加,1-参加 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","0-不参加,1-参加");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	private final TableField<?>[] allFields = new TableField<?>[] {niuId,adId,userId,ptfId,limitNum,yield,niuDesc,createOpr,updateOpr,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAdNiuInfo[table=ad_niu_info]";
	}
}
