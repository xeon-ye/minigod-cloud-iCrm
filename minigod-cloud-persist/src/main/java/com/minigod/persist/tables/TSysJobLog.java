package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSysJobLog extends AbstractTable {

	static {
		init();
	}

	private TSysJobLog(){
		super.tableName = "sys_job_log";
	}

	private TSysJobLog(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSysJobLog getInstance() {
		return new TSysJobLog();
	}

	public static final TSysJobLog getInstance(String aliasName) {
		return new TSysJobLog(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("jobLogId", "job_log_id");
		allFieldMap.put("sysName", "sys_name");
		allFieldMap.put("jobName", "job_name");
		allFieldMap.put("jobDate", "job_date");
		allFieldMap.put("jobStatus", "job_status");
		allFieldMap.put("errCode", "err_code");
		allFieldMap.put("errMsg", "err_msg");
		allFieldMap.put("startTime", "start_time");
		allFieldMap.put("endTime", "end_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 日志ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"job_log_id","jobLogId","日志ID");
	public final TableField<Integer> jobLogId = new TableFieldImpl<Integer>(this,"job_log_id","jobLogId","日志ID");

	/**
	 *  | varchar(50)
	 */
	public final TableField<String> sysName = new TableFieldImpl<String>(this,"sys_name","sysName","");

	/**
	 *  | varchar(50)
	 */
	public final TableField<String> jobName = new TableFieldImpl<String>(this,"job_name","jobName","");

	/**
	 * 业务日期 | date
	 */
	public final DateTableField<Date> jobDate = new DateTableFieldImpl<Date>(this,"job_date","jobDate","业务日期");

	/**
	 * 任务状态 | char(1)
	 */
	public final TableField<String> jobStatus = new TableFieldImpl<String>(this,"job_status","jobStatus","任务状态");

	/**
	 * 错误码 | int(11)
	 */
	public final TableField<Integer> errCode = new TableFieldImpl<Integer>(this,"err_code","errCode","错误码");

	/**
	 *  | varchar(2000)
	 */
	public final TableField<String> errMsg = new TableFieldImpl<String>(this,"err_msg","errMsg","");

	/**
	 * 错误时间 | datetime
	 */
	public final DateTableField<Date> startTime = new DateTableFieldImpl<Date>(this,"start_time","startTime","错误时间");

	/**
	 * 结束时间 | datetime
	 */
	public final DateTableField<Date> endTime = new DateTableFieldImpl<Date>(this,"end_time","endTime","结束时间");

	private final TableField<?>[] allFields = new TableField<?>[] {jobLogId,sysName,jobName,jobDate,jobStatus,errCode,errMsg,startTime,endTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSysJobLog[table=sys_job_log]";
	}
}
