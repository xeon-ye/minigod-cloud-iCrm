package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TPublishContent extends AbstractTable {

	static {
		init();
	}

	private TPublishContent(){
		super.tableName = "publish_content";
	}

	private TPublishContent(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TPublishContent getInstance() {
		return new TPublishContent();
	}

	public static final TPublishContent getInstance(String aliasName) {
		return new TPublishContent(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("title", "title");
		allFieldMap.put("content", "content");
		allFieldMap.put("resourceId", "resource_id");
		allFieldMap.put("isShare", "isShare");
		allFieldMap.put("isCommon", "isCommon");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("isUsed", "isUsed");
		allFieldMap.put("sortId", "sort_id");
		allFieldMap.put("clicks", "clicks");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 标题 | varchar(200)
	 */
	public final TableField<String> title = new TableFieldImpl<String>(this,"title","title","标题");

	/**
	 * 内容 | longtext
	 */
	public final TableField<String> content = new TableFieldImpl<String>(this,"content","content","内容");

	/**
	 * 对应目录ID | bigint(20)
	 */
	public final TableField<Long> resourceId = new TableFieldImpl<Long>(this,"resource_id","resourceId","对应目录ID");

	/**
	 * 	是否可分享1:是 0:否 | int(2)
	 */
	public final TableField<Integer> isShare = new TableFieldImpl<Integer>(this,"isShare","isShare","	是否可分享1:是 0:否");

	/**
	 * 	是否是常见问题 1:是 0：否 | int(2)
	 */
	public final TableField<Integer> isCommon = new TableFieldImpl<Integer>(this,"isCommon","isCommon","	是否是常见问题 1:是 0：否");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	/**
	 *  | int(2)
	 */
	public final TableField<Integer> isUsed = new TableFieldImpl<Integer>(this,"isUsed","isUsed","");

	/**
	 * 排序编号 | int(11)
	 */
	public final TableField<Integer> sortId = new TableFieldImpl<Integer>(this,"sort_id","sortId","排序编号");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> clicks = new TableFieldImpl<Integer>(this,"clicks","clicks","");

	private final TableField<?>[] allFields = new TableField<?>[] {id,title,content,resourceId,isShare,isCommon,createTime,updateTime,isUsed,sortId,clicks};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TPublishContent[table=publish_content]";
	}
}
