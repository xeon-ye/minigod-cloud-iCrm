package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TPtfLike extends AbstractTable {

	static {
		init();
	}

	private TPtfLike(){
		super.tableName = "ptf_like";
	}

	private TPtfLike(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TPtfLike getInstance() {
		return new TPtfLike();
	}

	public static final TPtfLike getInstance(String aliasName) {
		return new TPtfLike(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("ptfLikeId", "ptf_like_id");
		allFieldMap.put("ptfId", "ptf_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("ptfCreatorId", "ptf_creator_id");
		allFieldMap.put("likeDate", "like_date");
		allFieldMap.put("updVersion", "upd_version");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 组合点赞ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"ptf_like_id","ptfLikeId","组合点赞ID");
	public final TableField<Integer> ptfLikeId = new TableFieldImpl<Integer>(this,"ptf_like_id","ptfLikeId","组合点赞ID");

	/**
	 * 组合ID | int(11)
	 */
	public final TableField<Integer> ptfId = new TableFieldImpl<Integer>(this,"ptf_id","ptfId","组合ID");

	/**
	 * 点赞用户ID | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","点赞用户ID");

	/**
	 * 组合创建者ID | int(11)
	 */
	public final TableField<Integer> ptfCreatorId = new TableFieldImpl<Integer>(this,"ptf_creator_id","ptfCreatorId","组合创建者ID");

	/**
	 * 点赞日期 | date
	 */
	public final DateTableField<Date> likeDate = new DateTableFieldImpl<Date>(this,"like_date","likeDate","点赞日期");

	/**
	 * 信息更新时的版本号 | bigint(19)
	 */
	public final TableField<Long> updVersion = new TableFieldImpl<Long>(this,"upd_version","updVersion","信息更新时的版本号");

	/**
	 * 记录状态 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","记录状态");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {ptfLikeId,ptfId,userId,ptfCreatorId,likeDate,updVersion,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TPtfLike[table=ptf_like]";
	}
}
