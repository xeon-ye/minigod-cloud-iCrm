package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TGameStkLike extends AbstractTable {

	static {
		init();
	}

	private TGameStkLike(){
		super.tableName = "game_stk_like";
	}

	private TGameStkLike(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TGameStkLike getInstance() {
		return new TGameStkLike();
	}

	public static final TGameStkLike getInstance(String aliasName) {
		return new TGameStkLike(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("gameStkLikeId", "game_stk_like_id");
		allFieldMap.put("gameStkId", "game_stk_id");
		allFieldMap.put("gameUserId", "game_user_id");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"game_stk_like_id","gameStkLikeId","");
	public final TableField<Integer> gameStkLikeId = new TableFieldImpl<Integer>(this,"game_stk_like_id","gameStkLikeId","");

	/**
	 * 赛事个股id | int(11)
	 */
	public final TableField<Integer> gameStkId = new TableFieldImpl<Integer>(this,"game_stk_id","gameStkId","赛事个股id");

	/**
	 * 点赞用户id | int(11)
	 */
	public final TableField<Integer> gameUserId = new TableFieldImpl<Integer>(this,"game_user_id","gameUserId","点赞用户id");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {gameStkLikeId,gameStkId,gameUserId,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TGameStkLike[table=game_stk_like]";
	}
}
