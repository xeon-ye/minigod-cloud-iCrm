package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TMsgReadRecord extends AbstractTable {

	static {
		init();
	}

	private TMsgReadRecord(){
		super.tableName = "msg_read_record";
	}

	private TMsgReadRecord(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TMsgReadRecord getInstance() {
		return new TMsgReadRecord();
	}

	public static final TMsgReadRecord getInstance(String aliasName) {
		return new TMsgReadRecord(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("msgReadRecordId", "msg_read_record_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("msgCode", "msg_code");
		allFieldMap.put("msgChildCode", "msg_child_code");
		allFieldMap.put("readVersion", "read_version");
		allFieldMap.put("unreadNum", "unread_num");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("lockVersion", "lock_version");
		allFieldMap.put("isStatus", "is_status");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 消息读取记录表id | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"msg_read_record_id","msgReadRecordId","消息读取记录表id");

	/**
	 * 乐观锁字段
	 */
	public final TableField<Integer>  lock = new TableFieldImpl<Integer>(this,"lock_version","lockVersion","消息读取记录表id");

	public final TableField<Integer> msgReadRecordId = new TableFieldImpl<Integer>(this,"msg_read_record_id","msgReadRecordId","消息读取记录表id");

	/**
	 * 用户id | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户id");

	/**
	 * 消息分类。2001(PTF)组合，2004(USER)新的好友 | int(4)
	 */
	public final TableField<Integer> msgCode = new TableFieldImpl<Integer>(this,"msg_code","msgCode","消息分类。2001(PTF)组合，2004(USER)新的好友");

	/**
	 * 消息子分类 | int(11)
	 */
	public final TableField<Integer> msgChildCode = new TableFieldImpl<Integer>(this,"msg_child_code","msgChildCode","消息子分类");

	/**
	 * 最后已读的时间戳或者id | bigint(11)
	 */
	public final TableField<Long> readVersion = new TableFieldImpl<Long>(this,"read_version","readVersion","最后已读的时间戳或者id");

	/**
	 * 未读消息数量 | int(11)
	 */
	public final TableField<Integer> unreadNum = new TableFieldImpl<Integer>(this,"unread_num","unreadNum","未读消息数量");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	/**
	 * 乐观锁版本号 | int(11)
	 */
	public final TableField<Integer> lockVersion = new TableFieldImpl<Integer>(this,"lock_version","lockVersion","乐观锁版本号");

	/**
	 * 有效标志 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","有效标志");

	private final TableField<?>[] allFields = new TableField<?>[] {msgReadRecordId,userId,msgCode,msgChildCode,readVersion,unreadNum,createTime,updateTime,lockVersion,isStatus};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return lock;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return true;
	}

	public String toString() {
		return "TMsgReadRecord[table=msg_read_record]";
	}
}
