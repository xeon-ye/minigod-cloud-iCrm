package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAppVersion extends AbstractTable {

	static {
		init();
	}

	private TAppVersion(){
		super.tableName = "app_version";
	}

	private TAppVersion(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAppVersion getInstance() {
		return new TAppVersion();
	}

	public static final TAppVersion getInstance(String aliasName) {
		return new TAppVersion(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("appVerId", "app_ver_id");
		allFieldMap.put("versionNo", "version_no");
		allFieldMap.put("url", "url");
		allFieldMap.put("size", "size");
		allFieldMap.put("updateDeclare", "update_declare");
		allFieldMap.put("deviceType", "device_type");
		allFieldMap.put("osType", "os_type");
		allFieldMap.put("channel", "channel");
		allFieldMap.put("md5", "md5");
		allFieldMap.put("checkCode", "check_code");
		allFieldMap.put("isNew", "is_new");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * APP版本ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"app_ver_id","appVerId","APP版本ID");
	public final TableField<Integer> appVerId = new TableFieldImpl<Integer>(this,"app_ver_id","appVerId","APP版本ID");

	/**
	 *  | varchar(30)
	 */
	public final TableField<String> versionNo = new TableFieldImpl<String>(this,"version_no","versionNo","");

	/**
	 *  | varchar(200)
	 */
	public final TableField<String> url = new TableFieldImpl<String>(this,"url","url","");

	/**
	 *  | varchar(11)
	 */
	public final TableField<String> size = new TableFieldImpl<String>(this,"size","size","");

	/**
	 *  | varchar(500)
	 */
	public final TableField<String> updateDeclare = new TableFieldImpl<String>(this,"update_declare","updateDeclare","");

	/**
	 * 设备类型(0PC;1手机;2平板) | tinyint(4)
	 */
	public final TableField<Integer> deviceType = new TableFieldImpl<Integer>(this,"device_type","deviceType","设备类型(0PC;1手机;2平板)");

	/**
	 * 操作系统类型(0安卓，1苹果，2WP) | tinyint(4)
	 */
	public final TableField<Integer> osType = new TableFieldImpl<Integer>(this,"os_type","osType","操作系统类型(0安卓，1苹果，2WP)");

	/**
	 *  | varchar(30)
	 */
	public final TableField<String> channel = new TableFieldImpl<String>(this,"channel","channel","");

	/**
	 *  | varchar(128)
	 */
	public final TableField<String> md5 = new TableFieldImpl<String>(this,"md5","md5","");

	/**
	 * 升级状态(0为已是最新版本无须升级,1为有新版本，无须升级,2为有新版本，建议升级,3为有新版本，必须升级方可使用) | tinyint(4)
	 */
	public final TableField<Integer> checkCode = new TableFieldImpl<Integer>(this,"check_code","checkCode","升级状态(0为已是最新版本无须升级,1为有新版本，无须升级,2为有新版本，建议升级,3为有新版本，必须升级方可使用)");

	/**
	 * 是否最新版本(1是，0不是) | tinyint(1)
	 */
	public final TableField<Boolean> isNew = new TableFieldImpl<Boolean>(this,"is_new","isNew","是否最新版本(1是，0不是)");

	/**
	 * 状态(0停用，1正常使用，停用后不容许升级) | tinyint(4)
	 */
	public final TableField<Integer> isStatus = new TableFieldImpl<Integer>(this,"is_status","isStatus","状态(0停用，1正常使用，停用后不容许升级)");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 最后修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","最后修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {appVerId,versionNo,url,size,updateDeclare,deviceType,osType,channel,md5,checkCode,isNew,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAppVersion[table=app_version]";
	}
}
