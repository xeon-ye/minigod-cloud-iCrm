package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TInformEmailContent extends AbstractTable {

	static {
		init();
	}

	private TInformEmailContent(){
		super.tableName = "inform_email_content";
	}

	private TInformEmailContent(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TInformEmailContent getInstance() {
		return new TInformEmailContent();
	}

	public static final TInformEmailContent getInstance(String aliasName) {
		return new TInformEmailContent(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("tempCode", "temp_code");
		allFieldMap.put("title", "title");
		allFieldMap.put("content", "content");
		allFieldMap.put("description", "description");
		allFieldMap.put("address", "address");
		allFieldMap.put("sendStatus", "send_status");
		allFieldMap.put("sendType", "send_type");
		allFieldMap.put("sendTime", "send_time");
		allFieldMap.put("retryCnt", "retry_cnt");
		allFieldMap.put("hasAttach", "has_attach");
		allFieldMap.put("attachUris", "attach_uris");
		allFieldMap.put("oprId", "opr_id");
		allFieldMap.put("oprName", "opr_name");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 模板编码 | int(10)
	 */
	public final TableField<Integer> tempCode = new TableFieldImpl<Integer>(this,"temp_code","tempCode","模板编码");

	/**
	 * 邮件标题 | varchar(100)
	 */
	public final TableField<String> title = new TableFieldImpl<String>(this,"title","title","邮件标题");

	/**
	 * 邮件内容 | varchar(2000)
	 */
	public final TableField<String> content = new TableFieldImpl<String>(this,"content","content","邮件内容");

	/**
	 * 描述 | varchar(100)
	 */
	public final TableField<String> description = new TableFieldImpl<String>(this,"description","description","描述");

	/**
	 * 邮件地址 | varchar(50)
	 */
	public final TableField<String> address = new TableFieldImpl<String>(this,"address","address","邮件地址");

	/**
	 * 推送状态(0-未发送，1-已发送 2-发送失败) | int(1)
	 */
	public final TableField<Integer> sendStatus = new TableFieldImpl<Integer>(this,"send_status","sendStatus","推送状态(0-未发送，1-已发送 2-发送失败)");

	/**
	 * 发送类型(-即时 1-定时) | int(1)
	 */
	public final TableField<Integer> sendType = new TableFieldImpl<Integer>(this,"send_type","sendType","发送类型(-即时 1-定时)");

	/**
	 * 定时发送时间 | datetime
	 */
	public final DateTableField<Date> sendTime = new DateTableFieldImpl<Date>(this,"send_time","sendTime","定时发送时间");

	/**
	 * 重发次数 | int(10)
	 */
	public final TableField<Integer> retryCnt = new TableFieldImpl<Integer>(this,"retry_cnt","retryCnt","重发次数");

	/**
	 * 是否有附件(0-否 1-是) | tinyint(1)
	 */
	public final TableField<Boolean> hasAttach = new TableFieldImpl<Boolean>(this,"has_attach","hasAttach","是否有附件(0-否 1-是)");

	/**
	 * 附件地址 | varchar(500)
	 */
	public final TableField<String> attachUris = new TableFieldImpl<String>(this,"attach_uris","attachUris","附件地址");

	/**
	 * 权限审核人ID | int(11)
	 */
	public final TableField<Integer> oprId = new TableFieldImpl<Integer>(this,"opr_id","oprId","权限审核人ID");

	/**
	 * 权限审核人名称 | varchar(30)
	 */
	public final TableField<String> oprName = new TableFieldImpl<String>(this,"opr_name","oprName","权限审核人名称");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	private final TableField<?>[] allFields = new TableField<?>[] {id,tempCode,title,content,description,address,sendStatus,sendType,sendTime,retryCnt,hasAttach,attachUris,oprId,oprName,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TInformEmailContent[table=inform_email_content]";
	}
}
