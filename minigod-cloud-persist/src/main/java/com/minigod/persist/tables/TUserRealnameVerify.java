package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserRealnameVerify extends AbstractTable {

	static {
		init();
	}

	private TUserRealnameVerify(){
		super.tableName = "user_realname_verify";
	}

	private TUserRealnameVerify(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserRealnameVerify getInstance() {
		return new TUserRealnameVerify();
	}

	public static final TUserRealnameVerify getInstance(String aliasName) {
		return new TUserRealnameVerify(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("realName", "real_name");
		allFieldMap.put("identityCardNo", "identity_card_no");
		allFieldMap.put("sequence", "sequence");
		allFieldMap.put("verifieErrCount", "verifie_err_count");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("lockVersion", "lock_version");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 用户ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 乐观锁字段
	 */
	public final TableField<Integer>  lock = new TableFieldImpl<Integer>(this,"lock_version","lockVersion","用户ID");

	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 真实姓名 | varchar(10)
	 */
	public final TableField<String> realName = new TableFieldImpl<String>(this,"real_name","realName","真实姓名");

	/**
	 * 身份证号码 | varchar(32)
	 */
	public final TableField<String> identityCardNo = new TableFieldImpl<String>(this,"identity_card_no","identityCardNo","身份证号码");

	/**
	 * 绑定序号 0表示当前使用记录(有效状态) 其余数字为历史记录 | int(11)
	 */
	public final TableField<Integer> sequence = new TableFieldImpl<Integer>(this,"sequence","sequence","绑定序号 0表示当前使用记录(有效状态) 其余数字为历史记录");

	/**
	 * 实名失败认证次数 | tinyint(4)
	 */
	public final TableField<Integer> verifieErrCount = new TableFieldImpl<Integer>(this,"verifie_err_count","verifieErrCount","实名失败认证次数");

	/**
	 * 记录创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","记录创建时间");

	/**
	 * 记录修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","记录修改时间");

	/**
	 * 乐观锁版本号 | int(11)
	 */
	public final TableField<Integer> lockVersion = new TableFieldImpl<Integer>(this,"lock_version","lockVersion","乐观锁版本号");

	private final TableField<?>[] allFields = new TableField<?>[] {userId,realName,identityCardNo,sequence,verifieErrCount,createTime,updateTime,lockVersion};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return lock;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return true;
	}

	public String toString() {
		return "TUserRealnameVerify[table=user_realname_verify]";
	}
}
