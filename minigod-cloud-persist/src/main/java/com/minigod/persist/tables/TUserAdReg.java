package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserAdReg extends AbstractTable {

	static {
		init();
	}

	private TUserAdReg(){
		super.tableName = "user_ad_reg";
	}

	private TUserAdReg(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserAdReg getInstance() {
		return new TUserAdReg();
	}

	public static final TUserAdReg getInstance(String aliasName) {
		return new TUserAdReg(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("adRegId", "ad_reg_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("adId", "ad_id");
		allFieldMap.put("openCount", "open_count");
		allFieldMap.put("isClose", "is_close");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 广告登记ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"ad_reg_id","adRegId","广告登记ID");
	public final TableField<Integer> adRegId = new TableFieldImpl<Integer>(this,"ad_reg_id","adRegId","广告登记ID");

	/**
	 * 用户ID | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 广告id | int(11)
	 */
	public final TableField<Integer> adId = new TableFieldImpl<Integer>(this,"ad_id","adId","广告id");

	/**
	 * 打开次数 | int(11)
	 */
	public final TableField<Integer> openCount = new TableFieldImpl<Integer>(this,"open_count","openCount","打开次数");

	/**
	 * 显示状态(0-关闭，1-展示) | tinyint(1)
	 */
	public final TableField<Boolean> isClose = new TableFieldImpl<Boolean>(this,"is_close","isClose","显示状态(0-关闭，1-展示)");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {adRegId,userId,adId,openCount,isClose,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TUserAdReg[table=user_ad_reg]";
	}
}
