package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TSysSequence extends AbstractTable {

	static {
		init();
	}

	private TSysSequence(){
		super.tableName = "sys_sequence";
	}

	private TSysSequence(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSysSequence getInstance() {
		return new TSysSequence();
	}

	public static final TSysSequence getInstance(String aliasName) {
		return new TSysSequence(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("seqName", "seq_name");
		allFieldMap.put("seqVersion", "seq_version");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | varchar(40)
	 */
	public final TableField<String>  pk = new TableFieldImpl<String>(this,"seq_name","seqName","");
	public final TableField<String> seqName = new TableFieldImpl<String>(this,"seq_name","seqName","");

	/**
	 * 当前值 | bigint(19) unsigned
	 */
	public final TableField<Long> seqVersion = new TableFieldImpl<Long>(this,"seq_version","seqVersion","当前值");

	private final TableField<?>[] allFields = new TableField<?>[] {seqName,seqVersion};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSysSequence[table=sys_sequence]";
	}
}
