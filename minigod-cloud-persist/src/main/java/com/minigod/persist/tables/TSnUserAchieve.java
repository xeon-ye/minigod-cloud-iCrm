package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSnUserAchieve extends AbstractTable {

	static {
		init();
	}

	private TSnUserAchieve(){
		super.tableName = "sn_user_achieve";
	}

	private TSnUserAchieve(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSnUserAchieve getInstance() {
		return new TSnUserAchieve();
	}

	public static final TSnUserAchieve getInstance(String aliasName) {
		return new TSnUserAchieve(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("userAchieveId", "user_achieve_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("featId", "feat_id");
		allFieldMap.put("level", "level");
		allFieldMap.put("featValue", "feat_value");
		allFieldMap.put("featLevelEnd", "feat_level_end");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"user_achieve_id","userAchieveId","");
	public final TableField<Integer> userAchieveId = new TableFieldImpl<Integer>(this,"user_achieve_id","userAchieveId","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","");

	/**
	 * 功勋id | int(11)
	 */
	public final TableField<Integer> featId = new TableFieldImpl<Integer>(this,"feat_id","featId","功勋id");

	/**
	 * 等级 | int(11)
	 */
	public final TableField<Integer> level = new TableFieldImpl<Integer>(this,"level","level","等级");

	/**
	 * 经验值 | int(11)
	 */
	public final TableField<Integer> featValue = new TableFieldImpl<Integer>(this,"feat_value","featValue","经验值");

	/**
	 * 功勋等级结束值 | int(11)
	 */
	public final TableField<Integer> featLevelEnd = new TableFieldImpl<Integer>(this,"feat_level_end","featLevelEnd","功勋等级结束值");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","");

	private final TableField<?>[] allFields = new TableField<?>[] {userAchieveId,userId,featId,level,featValue,featLevelEnd,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSnUserAchieve[table=sn_user_achieve]";
	}
}
