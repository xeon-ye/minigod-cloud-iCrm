package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TPublishItem extends AbstractTable {

	static {
		init();
	}

	private TPublishItem(){
		super.tableName = "publish_item";
	}

	private TPublishItem(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TPublishItem getInstance() {
		return new TPublishItem();
	}

	public static final TPublishItem getInstance(String aliasName) {
		return new TPublishItem(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("name", "name");
		allFieldMap.put("parentId", "parent_id");
		allFieldMap.put("isLeaf", "isLeaf");
		allFieldMap.put("picon", "picon");
		allFieldMap.put("message", "message");
		allFieldMap.put("isShare", "isShare");
		allFieldMap.put("isUsed", "isUsed");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("sortId", "sort_id");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 目录名称 | varchar(50)
	 */
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","目录名称");

	/**
	 * 父目录ID | bigint(20)
	 */
	public final TableField<Long> parentId = new TableFieldImpl<Long>(this,"parent_id","parentId","父目录ID");

	/**
	 * 	是否为叶子节点 1:是 0:否 | int(2)
	 */
	public final TableField<Integer> isLeaf = new TableFieldImpl<Integer>(this,"isLeaf","isLeaf","	是否为叶子节点 1:是 0:否");

	/**
	 * 图标 | varchar(200)
	 */
	public final TableField<String> picon = new TableFieldImpl<String>(this,"picon","picon","图标");

	/**
	 * 目录描述 | varchar(100)
	 */
	public final TableField<String> message = new TableFieldImpl<String>(this,"message","message","目录描述");

	/**
	 * 是否可分享1:是 0:否 | int(2)
	 */
	public final TableField<Integer> isShare = new TableFieldImpl<Integer>(this,"isShare","isShare","是否可分享1:是 0:否");

	/**
	 * 	是否有效1:有效 0:失效 | int(2)
	 */
	public final TableField<Integer> isUsed = new TableFieldImpl<Integer>(this,"isUsed","isUsed","	是否有效1:有效 0:失效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	/**
	 * 排序 | int(11)
	 */
	public final TableField<Integer> sortId = new TableFieldImpl<Integer>(this,"sort_id","sortId","排序");

	private final TableField<?>[] allFields = new TableField<?>[] {id,name,parentId,isLeaf,picon,message,isShare,isUsed,createTime,updateTime,sortId};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TPublishItem[table=publish_item]";
	}
}
