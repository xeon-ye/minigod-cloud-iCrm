package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.math.BigDecimal;

public class TShopTest extends AbstractTable {

	static {
		init();
	}

	private TShopTest(){
		super.tableName = "shop_test";
	}

	private TShopTest(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TShopTest getInstance() {
		return new TShopTest();
	}

	public static final TShopTest getInstance(String aliasName) {
		return new TShopTest(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("name", "name");
		allFieldMap.put("price", "price");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 *  | varchar(45)
	 */
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","");

	/**
	 *  | decimal(5,2)
	 */
	public final TableField<BigDecimal> price = new TableFieldImpl<BigDecimal>(this,"price","price","");

	private final TableField<?>[] allFields = new TableField<?>[] {id,name,price};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TShopTest[table=shop_test]";
	}
}
