package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TFriendGroup extends AbstractTable {

	static {
		init();
	}

	private TFriendGroup(){
		super.tableName = "friend_group";
	}

	private TFriendGroup(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TFriendGroup getInstance() {
		return new TFriendGroup();
	}

	public static final TFriendGroup getInstance(String aliasName) {
		return new TFriendGroup(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("groupId", "group_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("groupName", "group_name");
		allFieldMap.put("groupNum", "group_num");
		allFieldMap.put("isEdit", "is_edit");
		allFieldMap.put("sortId", "sort_id");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 分组id | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"group_id","groupId","分组id");
	public final TableField<Integer> groupId = new TableFieldImpl<Integer>(this,"group_id","groupId","分组id");

	/**
	 * 用户id，系统设置的公共组用户id为null | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户id，系统设置的公共组用户id为null");

	/**
	 * 组名 | varchar(50)
	 */
	public final TableField<String> groupName = new TableFieldImpl<String>(this,"group_name","groupName","组名");

	/**
	 * 组成员的数量 | int(11)
	 */
	public final TableField<Integer> groupNum = new TableFieldImpl<Integer>(this,"group_num","groupNum","组成员的数量");

	/**
	 * 0不可编辑，1可编辑 | tinyint(1)
	 */
	public final TableField<Boolean> isEdit = new TableFieldImpl<Boolean>(this,"is_edit","isEdit","0不可编辑，1可编辑");

	/**
	 * 排序id | int(11)
	 */
	public final TableField<Integer> sortId = new TableFieldImpl<Integer>(this,"sort_id","sortId","排序id");

	/**
	 * 状态 0-无效，默认1-有效 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","状态 0-无效，默认1-有效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {groupId,userId,groupName,groupNum,isEdit,sortId,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TFriendGroup[table=friend_group]";
	}
}
