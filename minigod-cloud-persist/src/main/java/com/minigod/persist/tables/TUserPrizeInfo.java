package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserPrizeInfo extends AbstractTable {

	static {
		init();
	}

	private TUserPrizeInfo(){
		super.tableName = "user_prize_info";
	}

	private TUserPrizeInfo(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserPrizeInfo getInstance() {
		return new TUserPrizeInfo();
	}

	public static final TUserPrizeInfo getInstance(String aliasName) {
		return new TUserPrizeInfo(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("wxId", "wx_id");
		allFieldMap.put("prizeNum", "prize_num");
		allFieldMap.put("prizeName", "prize_name");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("address", "address");
		allFieldMap.put("isCheck", "is_check");
		allFieldMap.put("status", "status");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(10)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 * 用户ID | int(10)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 用户微信ID | varchar(64)
	 */
	public final TableField<String> wxId = new TableFieldImpl<String>(this,"wx_id","wxId","用户微信ID");

	/**
	 * 奖品类别，0默认没有 | tinyint(2)
	 */
	public final TableField<Integer> prizeNum = new TableFieldImpl<Integer>(this,"prize_num","prizeNum","奖品类别，0默认没有");

	/**
	 * 奖品名称 | varchar(32)
	 */
	public final TableField<String> prizeName = new TableFieldImpl<String>(this,"prize_name","prizeName","奖品名称");

	/**
	 * 创建时间 | timestamp
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 用户地址 | varchar(256)
	 */
	public final TableField<String> address = new TableFieldImpl<String>(this,"address","address","用户地址");

	/**
	 * 是否抽奖 | tinyint(2)
	 */
	public final TableField<Integer> isCheck = new TableFieldImpl<Integer>(this,"is_check","isCheck","是否抽奖");

	/**
	 * 默认状态：0：有效，1无效 | tinyint(2)
	 */
	public final TableField<Integer> status = new TableFieldImpl<Integer>(this,"status","status","默认状态：0：有效，1无效");

	private final TableField<?>[] allFields = new TableField<?>[] {id,userId,wxId,prizeNum,prizeName,createTime,address,isCheck,status};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TUserPrizeInfo[table=user_prize_info]";
	}
}
