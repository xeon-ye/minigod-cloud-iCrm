package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TCardVerify extends AbstractTable {

	static {
		init();
	}

	private TCardVerify(){
		super.tableName = "card_verify";
	}

	private TCardVerify(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TCardVerify getInstance() {
		return new TCardVerify();
	}

	public static final TCardVerify getInstance(String aliasName) {
		return new TCardVerify(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("userName", "user_name");
		allFieldMap.put("cellPhone", "cell_phone");
		allFieldMap.put("idCard", "id_card");
		allFieldMap.put("bankCard", "bank_card");
		allFieldMap.put("createDate", "create_date");
		allFieldMap.put("state", "state");
		allFieldMap.put("verifyCount", "verify_count");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 用户名称 | varchar(50)
	 */
	public final TableField<String> userName = new TableFieldImpl<String>(this,"user_name","userName","用户名称");

	/**
	 * 手机号 | varchar(20)
	 */
	public final TableField<String> cellPhone = new TableFieldImpl<String>(this,"cell_phone","cellPhone","手机号");

	/**
	 * 身份证 | varchar(50)
	 */
	public final TableField<String> idCard = new TableFieldImpl<String>(this,"id_card","idCard","身份证");

	/**
	 * 银行卡号 | varchar(30)
	 */
	public final TableField<String> bankCard = new TableFieldImpl<String>(this,"bank_card","bankCard","银行卡号");

	/**
	 * 创建时间 | date
	 */
	public final DateTableField<Date> createDate = new DateTableFieldImpl<Date>(this,"create_date","createDate","创建时间");

	/**
	 * 状态(0:不通过 1:通过) | int(2)
	 */
	public final TableField<Integer> state = new TableFieldImpl<Integer>(this,"state","state","状态(0:不通过 1:通过)");

	/**
	 * 验证次数 | int(2)
	 */
	public final TableField<Integer> verifyCount = new TableFieldImpl<Integer>(this,"verify_count","verifyCount","验证次数");

	private final TableField<?>[] allFields = new TableField<?>[] {id,userName,cellPhone,idCard,bankCard,createDate,state,verifyCount};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TCardVerify[table=card_verify]";
	}
}
