package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserDoubleVerify extends AbstractTable {

	static {
		init();
	}

	private TUserDoubleVerify(){
		super.tableName = "user_double_verify";
	}

	private TUserDoubleVerify(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserDoubleVerify getInstance() {
		return new TUserDoubleVerify();
	}

	public static final TUserDoubleVerify getInstance(String aliasName) {
		return new TUserDoubleVerify(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("udvId", "udv_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("lastDatetime", "last_datetime");
		allFieldMap.put("equipmentNum", "equipment_num");
		allFieldMap.put("udvStatus", "udv_status");
		allFieldMap.put("selectedType", "selected_type");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"udv_id","udvId","主键ID");
	public final TableField<Integer> udvId = new TableFieldImpl<Integer>(this,"udv_id","udvId","主键ID");

	/**
	 * 用户ID | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 勾选过7天的过期时间 | datetime
	 */
	public final DateTableField<Date> lastDatetime = new DateTableFieldImpl<Date>(this,"last_datetime","lastDatetime","勾选过7天的过期时间");

	/**
	 * 设备号 | varchar(50)
	 */
	public final TableField<String> equipmentNum = new TableFieldImpl<String>(this,"equipment_num","equipmentNum","设备号");

	/**
	 * 状态值，0表示未删除,1表示已删除 | tinyint(1) unsigned
	 */
	public final TableField<Boolean> udvStatus = new TableFieldImpl<Boolean>(this,"udv_status","udvStatus","状态值，0表示未删除,1表示已删除");

	/**
	 * 是否选择7天内不再提醒 0是没选中，1表示选择 | tinyint(1)
	 */
	public final TableField<Boolean> selectedType = new TableFieldImpl<Boolean>(this,"selected_type","selectedType","是否选择7天内不再提醒 0是没选中，1表示选择");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | timestamp
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	private final TableField<?>[] allFields = new TableField<?>[] {udvId,userId,lastDatetime,equipmentNum,udvStatus,selectedType,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TUserDoubleVerify[table=user_double_verify]";
	}
}
