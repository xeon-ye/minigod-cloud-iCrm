package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSnActivConfigItem extends AbstractTable {

	static {
		init();
	}

	private TSnActivConfigItem(){
		super.tableName = "sn_activ_config_item";
	}

	private TSnActivConfigItem(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSnActivConfigItem getInstance() {
		return new TSnActivConfigItem();
	}

	public static final TSnActivConfigItem getInstance(String aliasName) {
		return new TSnActivConfigItem(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("activItemName", "activ_item_name");
		allFieldMap.put("snActivConfigId", "sn_activ_config_id");
		allFieldMap.put("rewardType", "reward_type");
		allFieldMap.put("ruleInfo", "rule_Info");
		allFieldMap.put("STATUS", "STATUS");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 活动配置名称 | varchar(50)
	 */
	public final TableField<String> activItemName = new TableFieldImpl<String>(this,"activ_item_name","activItemName","活动配置名称");

	/**
	 * 活动id | Integer(11)
	 */
	public final TableField<Long> snActivConfigId = new TableFieldImpl<Long>(this,"sn_activ_config_id","snActivConfigId","活动id");
	
	/**
	 * 奖励类型，1免佣 2行情 3现金 | tinyint(4)
	 */
	public final TableField<Integer> rewardType = new TableFieldImpl<Integer>(this,"reward_type","rewardType","奖励类型，1免佣 2行情 3现金");

	/**
	 * 活动规则 | varchar(100)
	 */
	public final TableField<String> ruleInfo = new TableFieldImpl<String>(this,"rule_Info","ruleInfo","活动规则");

	/**
	 * 记录状态 0有效 1失效 | tinyint(4)
	 */
	public final TableField<Integer> STATUS = new TableFieldImpl<Integer>(this,"STATUS","STATUS","记录状态 0有效 1失效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 结束时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","结束时间");

	private final TableField<?>[] allFields = new TableField<?>[] {id,activItemName,snActivConfigId,rewardType,ruleInfo,STATUS,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSnActivConfigItem[table=sn_activ_config_item]";
	}
}
