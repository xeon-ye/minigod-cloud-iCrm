package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAdviserQuestionFlow extends AbstractTable {

	static {
		init();
	}

	private TAdviserQuestionFlow(){
		super.tableName = "adviser_question_flow";
	}

	private TAdviserQuestionFlow(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAdviserQuestionFlow getInstance() {
		return new TAdviserQuestionFlow();
	}

	public static final TAdviserQuestionFlow getInstance(String aliasName) {
		return new TAdviserQuestionFlow(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("questionFlowId", "question_flow_id");
		allFieldMap.put("questionId", "question_id");
		allFieldMap.put("questionUserId", "question_user_id");
		allFieldMap.put("answerUserId", "answer_user_id");
		allFieldMap.put("flowStatus", "flow_status");
		allFieldMap.put("isRead", "is_read");
		allFieldMap.put("reportContent", "report_content");
		allFieldMap.put("reportTime", "report_time");
		allFieldMap.put("rushTime", "rush_time");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 流转ID | int(20)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"question_flow_id","questionFlowId","流转ID");
	public final TableField<Integer> questionFlowId = new TableFieldImpl<Integer>(this,"question_flow_id","questionFlowId","流转ID");

	/**
	 * 问题id | int(20)
	 */
	public final TableField<Integer> questionId = new TableFieldImpl<Integer>(this,"question_id","questionId","问题id");

	/**
	 * 提问用户id | int(20)
	 */
	public final TableField<Integer> questionUserId = new TableFieldImpl<Integer>(this,"question_user_id","questionUserId","提问用户id");

	/**
	 * 回答用户id | int(20)
	 */
	public final TableField<Integer> answerUserId = new TableFieldImpl<Integer>(this,"answer_user_id","answerUserId","回答用户id");

	/**
	 * 流转状态 默认0待抢答，1已被抢答,2已抢未答， 3放弃，4超时，9已回答 | tinyint(4)
	 */
	public final TableField<Integer> flowStatus = new TableFieldImpl<Integer>(this,"flow_status","flowStatus","流转状态 默认0待抢答，1已被抢答,2已抢未答， 3放弃，4超时，9已回答");

	/**
	 * 默认0未读，1已读对回答者而言，flow_status=0且未读需打点 | tinyint(1)
	 */
	public final TableField<Boolean> isRead = new TableFieldImpl<Boolean>(this,"is_read","isRead","默认0未读，1已读对回答者而言，flow_status=0且未读需打点");

	/**
	 * 举报内容 | varchar(20)
	 */
	public final TableField<String> reportContent = new TableFieldImpl<String>(this,"report_content","reportContent","举报内容");

	/**
	 * 举报时间 | datetime
	 */
	public final DateTableField<Date> reportTime = new DateTableFieldImpl<Date>(this,"report_time","reportTime","举报时间");

	/**
	 * 抢答时间 | datetime
	 */
	public final DateTableField<Date> rushTime = new DateTableFieldImpl<Date>(this,"rush_time","rushTime","抢答时间");

	/**
	 * 记录状态 0-无效，默认1-有效 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","记录状态 0-无效，默认1-有效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {questionFlowId,questionId,questionUserId,answerUserId,flowStatus,isRead,reportContent,reportTime,rushTime,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAdviserQuestionFlow[table=adviser_question_flow]";
	}
}
