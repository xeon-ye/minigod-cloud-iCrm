package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TGrmServerType extends AbstractTable {

	static {
		init();
	}

	private TGrmServerType(){
		super.tableName = "grm_server_type";
	}

	private TGrmServerType(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TGrmServerType getInstance() {
		return new TGrmServerType();
	}

	public static final TGrmServerType getInstance(String aliasName) {
		return new TGrmServerType(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("typeId", "type_id");
		allFieldMap.put("typeCode", "type_code");
		allFieldMap.put("typeName", "type_name");
		allFieldMap.put("typeDesc", "type_desc");
		allFieldMap.put("createDate", "create_date");
		allFieldMap.put("remark", "remark");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"type_id","typeId","");
	public final TableField<Integer> typeId = new TableFieldImpl<Integer>(this,"type_id","typeId","");

	/**
	 *  | varchar(16)
	 */
	public final TableField<String> typeCode = new TableFieldImpl<String>(this,"type_code","typeCode","");

	/**
	 *  | varchar(32)
	 */
	public final TableField<String> typeName = new TableFieldImpl<String>(this,"type_name","typeName","");

	/**
	 *  | varchar(64)
	 */
	public final TableField<String> typeDesc = new TableFieldImpl<String>(this,"type_desc","typeDesc","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> createDate = new DateTableFieldImpl<Date>(this,"create_date","createDate","");

	/**
	 *  | varchar(128)
	 */
	public final TableField<String> remark = new TableFieldImpl<String>(this,"remark","remark","");

	private final TableField<?>[] allFields = new TableField<?>[] {typeId,typeCode,typeName,typeDesc,createDate,remark};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TGrmServerType[table=grm_server_type]";
	}
}
