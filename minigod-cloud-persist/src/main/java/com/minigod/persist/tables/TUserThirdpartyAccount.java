package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserThirdpartyAccount extends AbstractTable {

	static {
		init();
	}

	private TUserThirdpartyAccount(){
		super.tableName = "user_thirdparty_account";
	}

	private TUserThirdpartyAccount(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserThirdpartyAccount getInstance() {
		return new TUserThirdpartyAccount();
	}

	public static final TUserThirdpartyAccount getInstance(String aliasName) {
		return new TUserThirdpartyAccount(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("accType", "acc_type");
		allFieldMap.put("accountNo", "account_no");
		allFieldMap.put("accStatus", "acc_status");
		allFieldMap.put("regTime", "reg_time");
		allFieldMap.put("delTime", "del_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> accType = new TableFieldImpl<Integer>(this,"acc_type","accType","");

	/**
	 *  | varchar(32)
	 */
	public final TableField<String> accountNo = new TableFieldImpl<String>(this,"account_no","accountNo","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> accStatus = new TableFieldImpl<Integer>(this,"acc_status","accStatus","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> regTime = new DateTableFieldImpl<Date>(this,"reg_time","regTime","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> delTime = new DateTableFieldImpl<Date>(this,"del_time","delTime","");

	private final TableField<?>[] allFields = new TableField<?>[] {id,userId,accType,accountNo,accStatus,regTime,delTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TUserThirdpartyAccount[table=user_thirdparty_account]";
	}
}
