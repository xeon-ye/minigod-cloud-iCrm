package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TActiveConfig extends AbstractTable {

	static {
		init();
	}

	private TActiveConfig(){
		super.tableName = "active_config";
	}

	private TActiveConfig(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TActiveConfig getInstance() {
		return new TActiveConfig();
	}

	public static final TActiveConfig getInstance(String aliasName) {
		return new TActiveConfig(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("activeConfigId", "active_config_id");
		allFieldMap.put("activeType", "active_type");
		allFieldMap.put("startValue", "start_value");
		allFieldMap.put("endValue", "end_value");
		allFieldMap.put("freeDay", "free_day");
		allFieldMap.put("quotaMonth", "quota_month");
		allFieldMap.put("startTime", "start_time");
		allFieldMap.put("endTime", "end_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"active_config_id","activeConfigId","");
	public final TableField<Integer> activeConfigId = new TableFieldImpl<Integer>(this,"active_config_id","activeConfigId","");

	/**
	 * 1、开户 2、入金 | int(11)
	 */
	public final TableField<Integer> activeType = new TableFieldImpl<Integer>(this,"active_type","activeType","1、开户 2、入金");

	/**
	 *  | double
	 */
	public final TableField<Double> startValue = new TableFieldImpl<Double>(this,"start_value","startValue","");

	/**
	 *  | double
	 */
	public final TableField<Double> endValue = new TableFieldImpl<Double>(this,"end_value","endValue","");

	/**
	 * 免佣天数 | int(11)
	 */
	public final TableField<Integer> freeDay = new TableFieldImpl<Integer>(this,"free_day","freeDay","免佣天数");

	/**
	 * 实时行情月数 | int(11)
	 */
	public final TableField<Integer> quotaMonth = new TableFieldImpl<Integer>(this,"quota_month","quotaMonth","实时行情月数");

	/**
	 * 活动开始日期 | datetime
	 */
	public final DateTableField<Date> startTime = new DateTableFieldImpl<Date>(this,"start_time","startTime","活动开始日期");

	/**
	 * 活动结束日期 | datetime
	 */
	public final DateTableField<Date> endTime = new DateTableFieldImpl<Date>(this,"end_time","endTime","活动结束日期");

	private final TableField<?>[] allFields = new TableField<?>[] {activeConfigId,activeType,startValue,endValue,freeDay,quotaMonth,startTime,endTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TActiveConfig[table=active_config]";
	}
}
