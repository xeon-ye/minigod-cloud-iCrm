package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TGrmFunctionFieldMapping extends AbstractTable {

	static {
		init();
	}

	private TGrmFunctionFieldMapping(){
		super.tableName = "grm_function_field_mapping";
	}

	private TGrmFunctionFieldMapping(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TGrmFunctionFieldMapping getInstance() {
		return new TGrmFunctionFieldMapping();
	}

	public static final TGrmFunctionFieldMapping getInstance(String aliasName) {
		return new TGrmFunctionFieldMapping(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("ffmapId", "ffmap_id");
		allFieldMap.put("functionId", "function_id");
		allFieldMap.put("fieldId", "field_id");
		allFieldMap.put("isRequired", "is_required");
		allFieldMap.put("isReq", "is_req");
		allFieldMap.put("isRes", "is_res");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"ffmap_id","ffmapId","");
	public final TableField<Integer> ffmapId = new TableFieldImpl<Integer>(this,"ffmap_id","ffmapId","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> functionId = new TableFieldImpl<Integer>(this,"function_id","functionId","");

	/**
	 *  | int(11)
	 */
	public final TableField<Integer> fieldId = new TableFieldImpl<Integer>(this,"field_id","fieldId","");

	/**
	 *  | tinyint(1)
	 */
	public final TableField<Boolean> isRequired = new TableFieldImpl<Boolean>(this,"is_required","isRequired","");

	/**
	 *  | tinyint(1)
	 */
	public final TableField<Boolean> isReq = new TableFieldImpl<Boolean>(this,"is_req","isReq","");

	/**
	 *  | tinyint(1)
	 */
	public final TableField<Boolean> isRes = new TableFieldImpl<Boolean>(this,"is_res","isRes","");

	private final TableField<?>[] allFields = new TableField<?>[] {ffmapId,functionId,fieldId,isRequired,isReq,isRes};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TGrmFunctionFieldMapping[table=grm_function_field_mapping]";
	}
}
