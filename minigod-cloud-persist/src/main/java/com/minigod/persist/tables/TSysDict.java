package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSysDict extends AbstractTable {

	static {
		init();
	}

	private TSysDict(){
		super.tableName = "sys_dict";
	}

	private TSysDict(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSysDict getInstance() {
		return new TSysDict();
	}

	public static final TSysDict getInstance(String aliasName) {
		return new TSysDict(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("dictId", "dict_id");
		allFieldMap.put("dictCode", "dict_code");
		allFieldMap.put("dictName", "dict_name");
		allFieldMap.put("valueCode", "value_code");
		allFieldMap.put("valueName", "value_name");
		allFieldMap.put("valueRemark", "value_remark");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 字典ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"dict_id","dictId","字典ID");
	public final TableField<Integer> dictId = new TableFieldImpl<Integer>(this,"dict_id","dictId","字典ID");

	/**
	 *  | varchar(100)
	 */
	public final TableField<String>  pk1 = new TableFieldImpl<String>(this,"dict_code","dictCode","");
	public final TableField<String> dictCode = new TableFieldImpl<String>(this,"dict_code","dictCode","");

	/**
	 *  | varchar(255)
	 */
	public final TableField<String> dictName = new TableFieldImpl<String>(this,"dict_name","dictName","");

	/**
	 *  | varchar(100)
	 */
	public final TableField<String>  pk2 = new TableFieldImpl<String>(this,"value_code","valueCode","");
	public final TableField<String> valueCode = new TableFieldImpl<String>(this,"value_code","valueCode","");

	/**
	 *  | varchar(255)
	 */
	public final TableField<String> valueName = new TableFieldImpl<String>(this,"value_name","valueName","");

	/**
	 *  | varchar(255)
	 */
	public final TableField<String> valueRemark = new TableFieldImpl<String>(this,"value_remark","valueRemark","");

	/**
	 * 有效标志(0无效，默认1有效) | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","有效标志(0无效，默认1有效)");

	/**
	 * 记录创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","记录创建时间");

	/**
	 * 最后修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","最后修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {dictId,dictCode,dictName,valueCode,valueName,valueRemark,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSysDict[table=sys_dict]";
	}
}
