package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TOpenUserImg extends AbstractTable {

	static {
		init();
	}

	private TOpenUserImg(){
		super.tableName = "open_user_img";
	}

	private TOpenUserImg(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TOpenUserImg getInstance() {
		return new TOpenUserImg();
	}

	public static final TOpenUserImg getInstance(String aliasName) {
		return new TOpenUserImg(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("imageLocation", "imageLocation");
		allFieldMap.put("imageLocationType", "imageLocationType");
		allFieldMap.put("imgPath", "img_path");
		allFieldMap.put("errorStatus", "error_status");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","");

	/**
	 * 用户id | int(20)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户id");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 图片位置[0=未知 1=身份证正面照坐标 2=身份证反面照片坐标 3=指定动作1照坐标 4=指定动作2照坐标 5=指定动作3照坐标 6=电子签名照坐标] | char(3)
	 */
	public final TableField<String> imageLocation = new TableFieldImpl<String>(this,"imageLocation","imageLocation","图片位置[0=未知 1=身份证正面照坐标 2=身份证反面照片坐标 3=指定动作1照坐标 4=指定动作2照坐标 5=指定动作3照坐标 6=电子签名照坐标]");

	/**
	 * 图片类型[0=未知 1=身份证正面照 2=身份证反面照片 3=左手竖起1个指头 4=右手竖起1个指头 5=左手竖起2个指头 6=右手竖起2个指头 7=左手竖起3个指头 8=右手竖起3个指头 9=正面照 10=电子签名照] | char(3)
	 */
	public final TableField<String> imageLocationType = new TableFieldImpl<String>(this,"imageLocationType","imageLocationType","图片类型[0=未知 1=身份证正面照 2=身份证反面照片 3=左手竖起1个指头 4=右手竖起1个指头 5=左手竖起2个指头 6=右手竖起2个指头 7=左手竖起3个指头 8=右手竖起3个指头 9=正面照 10=电子签名照]");

	/**
	 *  | varchar(200)
	 */
	public final TableField<String> imgPath = new TableFieldImpl<String>(this,"img_path","imgPath","");

	/**
	 * 表示错误图片 | bigint(20)
	 */
	public final TableField<Long> errorStatus = new TableFieldImpl<Long>(this,"error_status","errorStatus","表示错误图片");

	private final TableField<?>[] allFields = new TableField<?>[] {id,userId,createTime,imageLocation,imageLocationType,imgPath,errorStatus};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TOpenUserImg[table=open_user_img]";
	}
}
