package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TImportData extends AbstractTable {

	static {
		init();
	}

	private TImportData(){
		super.tableName = "import_data";
	}

	private TImportData(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TImportData getInstance() {
		return new TImportData();
	}

	public static final TImportData getInstance(String aliasName) {
		return new TImportData(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("phone", "phone");
		allFieldMap.put("name", "name");
		allFieldMap.put("sex", "sex");
		allFieldMap.put("city", "city");
		allFieldMap.put("registDate", "regist_date");
		allFieldMap.put("amount", "amount");
		allFieldMap.put("orderCount", "order_count");
		allFieldMap.put("level", "level");
		allFieldMap.put("isImport", "is_import");
		allFieldMap.put("remark", "remark");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"id","id","");
	public final TableField<Integer> id = new TableFieldImpl<Integer>(this,"id","id","");

	/**
	 * 手机 | varchar(11)
	 */
	public final TableField<String> phone = new TableFieldImpl<String>(this,"phone","phone","手机");

	/**
	 * 名字 | varchar(20)
	 */
	public final TableField<String> name = new TableFieldImpl<String>(this,"name","name","名字");

	/**
	 * 性别 | varchar(5)
	 */
	public final TableField<String> sex = new TableFieldImpl<String>(this,"sex","sex","性别");

	/**
	 * 城市 | varchar(200)
	 */
	public final TableField<String> city = new TableFieldImpl<String>(this,"city","city","城市");

	/**
	 * 注册时间 | datetime
	 */
	public final DateTableField<Date> registDate = new DateTableFieldImpl<Date>(this,"regist_date","registDate","注册时间");

	/**
	 * 额度 | varchar(20)
	 */
	public final TableField<String> amount = new TableFieldImpl<String>(this,"amount","amount","额度");

	/**
	 * 下单次数 | int(11)
	 */
	public final TableField<Integer> orderCount = new TableFieldImpl<Integer>(this,"order_count","orderCount","下单次数");

	/**
	 * 优先级 | int(11)
	 */
	public final TableField<Integer> level = new TableFieldImpl<Integer>(this,"level","level","优先级");

	/**
	 * 是否已导入 0未导入1已导入 | int(11)
	 */
	public final TableField<Integer> isImport = new TableFieldImpl<Integer>(this,"is_import","isImport","是否已导入 0未导入1已导入");

	/**
	 *  | varchar(500)
	 */
	public final TableField<String> remark = new TableFieldImpl<String>(this,"remark","remark","");

	private final TableField<?>[] allFields = new TableField<?>[] {id,phone,name,sex,city,registDate,amount,orderCount,level,isImport,remark};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TImportData[table=import_data]";
	}
}
