package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.math.BigDecimal;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TUserInvestIdx extends AbstractTable {

	static {
		init();
	}

	private TUserInvestIdx(){
		super.tableName = "user_invest_idx";
	}

	private TUserInvestIdx(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TUserInvestIdx getInstance() {
		return new TUserInvestIdx();
	}

	public static final TUserInvestIdx getInstance(String aliasName) {
		return new TUserInvestIdx(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("indexDate", "index_date");
		allFieldMap.put("userIndex", "user_index");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("yesterdayMv", "yesterday_mv");
		allFieldMap.put("todayMv", "today_mv");
		allFieldMap.put("flowAmount", "flow_amount");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 用户ID | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 指数日期 | date
	 */
	public final TableField<Date>  pk1 = new TableFieldImpl<Date>(this,"index_date","indexDate","指数日期");
	public final DateTableField<Date> indexDate = new DateTableFieldImpl<Date>(this,"index_date","indexDate","指数日期");

	/**
	 *  | decimal(10,4)
	 */
	public final TableField<BigDecimal> userIndex = new TableFieldImpl<BigDecimal>(this,"user_index","userIndex","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","");

	/**
	 *  昨天市值 | decimal(16,4)
	 */
	public final TableField<BigDecimal> yesterdayMv = new TableFieldImpl<BigDecimal>(this,"yesterday_mv","yesterdayMv"," 昨天市值");

	/**
	 * 今天市值 | decimal(16,4)
	 */
	public final TableField<BigDecimal> todayMv = new TableFieldImpl<BigDecimal>(this,"today_mv","todayMv","今天市值");

	/**
	 * 今日净注入金额 | decimal(16,4)
	 */
	public final TableField<BigDecimal> flowAmount = new TableFieldImpl<BigDecimal>(this,"flow_amount","flowAmount","今日净注入金额");

	private final TableField<?>[] allFields = new TableField<?>[] {userId,indexDate,userIndex,createTime,yesterdayMv,todayMv,flowAmount};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TUserInvestIdx[table=user_invest_idx]";
	}
}
