package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAdPtfPromotion extends AbstractTable {

	static {
		init();
	}

	private TAdPtfPromotion(){
		super.tableName = "ad_ptf_promotion";
	}

	private TAdPtfPromotion(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAdPtfPromotion getInstance() {
		return new TAdPtfPromotion();
	}

	public static final TAdPtfPromotion getInstance(String aliasName) {
		return new TAdPtfPromotion(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("promotionId", "promotion_id");
		allFieldMap.put("adId", "ad_id");
		allFieldMap.put("ptfId", "ptf_id");
		allFieldMap.put("code", "code");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"promotion_id","promotionId","");
	public final TableField<Integer> promotionId = new TableFieldImpl<Integer>(this,"promotion_id","promotionId","");

	/**
	 * 广告id | int(11)
	 */
	public final TableField<Integer> adId = new TableFieldImpl<Integer>(this,"ad_id","adId","广告id");

	/**
	 * 组合id | int(11)
	 */
	public final TableField<Integer> ptfId = new TableFieldImpl<Integer>(this,"ptf_id","ptfId","组合id");

	/**
	 *  | varchar(10)
	 */
	public final TableField<String> code = new TableFieldImpl<String>(this,"code","code","");

	/**
	 * 是否有效 | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","是否有效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	private final TableField<?>[] allFields = new TableField<?>[] {promotionId,adId,ptfId,code,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAdPtfPromotion[table=ad_ptf_promotion]";
	}
}
