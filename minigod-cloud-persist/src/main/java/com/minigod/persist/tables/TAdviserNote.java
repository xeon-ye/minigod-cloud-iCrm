package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAdviserNote extends AbstractTable {

	static {
		init();
	}

	private TAdviserNote(){
		super.tableName = "adviser_note";
	}

	private TAdviserNote(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAdviserNote getInstance() {
		return new TAdviserNote();
	}

	public static final TAdviserNote getInstance(String aliasName) {
		return new TAdviserNote(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("adviserNoteId", "adviser_note_id");
		allFieldMap.put("viewpointId", "viewpoint_id");
		allFieldMap.put("grade", "grade");
		allFieldMap.put("createOpr", "create_opr");
		allFieldMap.put("updateOpr", "update_opr");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("createTime", "create_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"adviser_note_id","adviserNoteId","");
	public final TableField<Integer> adviserNoteId = new TableFieldImpl<Integer>(this,"adviser_note_id","adviserNoteId","");

	/**
	 * 观点id | bigint(11)
	 */
	public final TableField<Long> viewpointId = new TableFieldImpl<Long>(this,"viewpoint_id","viewpointId","观点id");

	/**
	 * 精选观点等级(0-默认排序，数字越高等级越高） | int(4)
	 */
	public final TableField<Integer> grade = new TableFieldImpl<Integer>(this,"grade","grade","精选观点等级(0-默认排序，数字越高等级越高）");

	/**
	 * 创建人id | int(11)
	 */
	public final TableField<Integer> createOpr = new TableFieldImpl<Integer>(this,"create_opr","createOpr","创建人id");

	/**
	 * 更新人id | int(11)
	 */
	public final TableField<Integer> updateOpr = new TableFieldImpl<Integer>(this,"update_opr","updateOpr","更新人id");

	/**
	 * 是否发布（0-未发布,1-发布) | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","是否发布（0-未发布,1-发布)");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	private final TableField<?>[] allFields = new TableField<?>[] {adviserNoteId,viewpointId,grade,createOpr,updateOpr,isStatus,updateTime,createTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAdviserNote[table=adviser_note]";
	}
}
