package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TGrmFunction extends AbstractTable {

	static {
		init();
	}

	private TGrmFunction(){
		super.tableName = "grm_function";
	}

	private TGrmFunction(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TGrmFunction getInstance() {
		return new TGrmFunction();
	}

	public static final TGrmFunction getInstance(String aliasName) {
		return new TGrmFunction(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("functionCode", "function_code");
		allFieldMap.put("functionName", "function_name");
		allFieldMap.put("createDate", "create_date");
		allFieldMap.put("functionState", "function_state");
		allFieldMap.put("functionDesc", "function_desc");
		allFieldMap.put("remark", "remark");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | varchar(16)
	 */
	public final TableField<String>  pk = new TableFieldImpl<String>(this,"function_code","functionCode","");
	public final TableField<String> functionCode = new TableFieldImpl<String>(this,"function_code","functionCode","");

	/**
	 *  | varchar(32)
	 */
	public final TableField<String> functionName = new TableFieldImpl<String>(this,"function_name","functionName","");

	/**
	 *  | datetime
	 */
	public final DateTableField<Date> createDate = new DateTableFieldImpl<Date>(this,"create_date","createDate","");

	/**
	 *  | smallint(6)
	 */
	public final TableField<Integer> functionState = new TableFieldImpl<Integer>(this,"function_state","functionState","");

	/**
	 *  | varchar(64)
	 */
	public final TableField<String> functionDesc = new TableFieldImpl<String>(this,"function_desc","functionDesc","");

	/**
	 *  | varchar(128)
	 */
	public final TableField<String> remark = new TableFieldImpl<String>(this,"remark","remark","");

	private final TableField<?>[] allFields = new TableField<?>[] {functionCode,functionName,createDate,functionState,functionDesc,remark};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return false;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TGrmFunction[table=grm_function]";
	}
}
