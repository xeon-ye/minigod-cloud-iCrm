package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TSnActivCashDraw extends AbstractTable {

	static {
		init();
	}

	private TSnActivCashDraw(){
		super.tableName = "sn_activ_cash_draw";
	}

	private TSnActivCashDraw(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSnActivCashDraw getInstance() {
		return new TSnActivCashDraw();
	}

	public static final TSnActivCashDraw getInstance(String aliasName) {
		return new TSnActivCashDraw(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("seqid", "seqid");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("wechatId", "wechat_id");
		allFieldMap.put("money", "money");
		allFieldMap.put("drawStatus", "draw_status");
		allFieldMap.put("drawDatetime", "draw_datetime");
		allFieldMap.put("STATUS", "STATUS");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
		allFieldMap.put("backReason", "back_reason");
		allFieldMap.put("backPerson", "back_person");
		
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 标示Id | varchar(50)
	 */
	public final TableField<String> seqid = new TableFieldImpl<String>(this,"seqid","seqid","标示Id");

	/**
	 * 用户id | bigint(20)
	 */
	public final TableField<Long> userId = new TableFieldImpl<Long>(this,"user_id","userId","用户id");
	
	/**
	 * 微信号 | varchar(50)
	 */
	public final TableField<String> wechatId = new TableFieldImpl<String>(this,"wechat_id","wechatId","微信号");

	/**
	 * 提现金额 | bigint(20)
	 */
	public final TableField<Long> money = new TableFieldImpl<Long>(this,"money","money","提现金额");

	/**
	 * 提现状态(1:未申请,2:已申请,3:退回,4:已完成) | tinyint(4)
	 */
	public final TableField<Integer> drawStatus = new TableFieldImpl<Integer>(this,"draw_status","drawStatus","提现状态(1:未申请,2:已申请,3:退回,4:已完成)");

	/**
	 * 提现时间 | datetime
	 */
	public final DateTableField<Date> drawDatetime = new DateTableFieldImpl<Date>(this,"draw_datetime","drawDatetime","提现时间");

	/**
	 * 记录状态 0有效 1失效 | tinyint(4)
	 */
	public final TableField<Integer> STATUS = new TableFieldImpl<Integer>(this,"STATUS","STATUS","记录状态 0有效 1失效");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	/**
	 * 退回理由 | varchar(500)
	 */
	public final TableField<String> backReason = new TableFieldImpl<String>(this,"back_reason","backReason","退回理由");

	/**
	 * 操作人 | varchar(20)
	 */
	public final TableField<String> backPerson = new TableFieldImpl<String>(this,"back_person","backPerson","操作人");

	private final TableField<?>[] allFields = new TableField<?>[] {id,seqid,userId,wechatId,money,drawStatus,drawDatetime,STATUS,createTime,updateTime,backReason,backPerson};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSnActivCashDraw[table=sn_activ_cash_draw]";
	}
}
