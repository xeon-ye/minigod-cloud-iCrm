package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;

public class TSecSharesInfo extends AbstractTable {

	static {
		init();
	}

	private TSecSharesInfo(){
		super.tableName = "sec_shares_info";
	}

	private TSecSharesInfo(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TSecSharesInfo getInstance() {
		return new TSecSharesInfo();
	}

	public static final TSecSharesInfo getInstance(String aliasName) {
		return new TSecSharesInfo(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("sharesId", "shares_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("sharesName", "shares_name");
		allFieldMap.put("sharesCode", "shares_code");
		allFieldMap.put("sharesNum", "shares_num");
		allFieldMap.put("sharesType", "shares_type");
		allFieldMap.put("isFind", "is_find");
		allFieldMap.put("stockId", "stock_id");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 转入股票信息ID | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"shares_id","sharesId","转入股票信息ID");
	public final TableField<Long> sharesId = new TableFieldImpl<Long>(this,"shares_id","sharesId","转入股票信息ID");

	/**
	 * 用户ID | int(20)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户ID");

	/**
	 * 股票信息 | varchar(50)
	 */
	public final TableField<String> sharesName = new TableFieldImpl<String>(this,"shares_name","sharesName","股票信息");

	/**
	 * 股票代码 | varchar(50)
	 */
	public final TableField<String> sharesCode = new TableFieldImpl<String>(this,"shares_code","sharesCode","股票代码");

	/**
	 * 转出数量 | int(11)
	 */
	public final TableField<Integer> sharesNum = new TableFieldImpl<Integer>(this,"shares_num","sharesNum","转出数量");

	/**
	 * 股票类型 1港股 2美股 | tinyint(4)
	 */
	public final TableField<Integer> sharesType = new TableFieldImpl<Integer>(this,"shares_type","sharesType","股票类型 1港股 2美股");

	/**
	 * 是否全部加载 0 否 1 是 | tinyint(4)
	 */
	public final TableField<Integer> isFind = new TableFieldImpl<Integer>(this,"is_find","isFind","是否全部加载 0 否 1 是");

	/**
	 * 关联转入股票表 | bigint(20)
	 */
	public final TableField<Long> stockId = new TableFieldImpl<Long>(this,"stock_id","stockId","关联转入股票表");

	private final TableField<?>[] allFields = new TableField<?>[] {sharesId,userId,sharesName,sharesCode,sharesNum,sharesType,isFind,stockId};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TSecSharesInfo[table=sec_shares_info]";
	}
}
