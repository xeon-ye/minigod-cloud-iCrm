package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TInformTemplateType extends AbstractTable {

	static {
		init();
	}

	private TInformTemplateType(){
		super.tableName = "inform_template_type";
	}

	private TInformTemplateType(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TInformTemplateType getInstance() {
		return new TInformTemplateType();
	}

	public static final TInformTemplateType getInstance(String aliasName) {
		return new TInformTemplateType(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("id", "id");
		allFieldMap.put("busType", "bus_type");
		allFieldMap.put("tempName", "temp_name");
		allFieldMap.put("parentId", "parent_id");
		allFieldMap.put("sendWay", "send_way");
		allFieldMap.put("isStatus", "is_status");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 主键 | bigint(20)
	 */
	public final TableField<Long>  pk = new TableFieldImpl<Long>(this,"id","id","主键");
	public final TableField<Long> id = new TableFieldImpl<Long>(this,"id","id","主键");

	/**
	 * 业务类型 1-邮件 2-短信 3-系统通知 4-消息通知 | int(2)
	 */
	public final TableField<Integer> busType = new TableFieldImpl<Integer>(this,"bus_type","busType","业务类型 1-邮件 2-短信 3-系统通知 4-消息通知");

	/**
	 * 类型名称 | varchar(100)
	 */
	public final TableField<String> tempName = new TableFieldImpl<String>(this,"temp_name","tempName","类型名称");

	/**
	 * 子类型 0-主类型 | bigint(20)
	 */
	public final TableField<Long> parentId = new TableFieldImpl<Long>(this,"parent_id","parentId","子类型 0-主类型");

	/**
	 * 发送方式(0-自动 1-手动) | int(1)
	 */
	public final TableField<Integer> sendWay = new TableFieldImpl<Integer>(this,"send_way","sendWay","发送方式(0-自动 1-手动)");

	/**
	 * 是否有效(0-无效，1-有效) | tinyint(1)
	 */
	public final TableField<Boolean> isStatus = new TableFieldImpl<Boolean>(this,"is_status","isStatus","是否有效(0-无效，1-有效)");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 更新时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","更新时间");

	private final TableField<?>[] allFields = new TableField<?>[] {id,busType,tempName,parentId,sendWay,isStatus,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TInformTemplateType[table=inform_template_type]";
	}
}
