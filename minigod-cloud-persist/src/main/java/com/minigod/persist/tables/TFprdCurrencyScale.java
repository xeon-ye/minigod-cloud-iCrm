package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.math.BigDecimal;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TFprdCurrencyScale extends AbstractTable {

	static {
		init();
	}

	private TFprdCurrencyScale(){
		super.tableName = "fprd_currency_scale";
	}

	private TFprdCurrencyScale(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TFprdCurrencyScale getInstance() {
		return new TFprdCurrencyScale();
	}

	public static final TFprdCurrencyScale getInstance(String aliasName) {
		return new TFprdCurrencyScale(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("currencyScaleId", "currency_scale_id");
		allFieldMap.put("beginTime", "begin_time");
		allFieldMap.put("scale", "scale");
		allFieldMap.put("notified", "notified");
		allFieldMap.put("createBy", "create_by");
		allFieldMap.put("updateBy", "update_by");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 * 控制ID  主键，自增长字段 | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"currency_scale_id","currencyScaleId","控制ID  主键，自增长字段");
	public final TableField<Integer> currencyScaleId = new TableFieldImpl<Integer>(this,"currency_scale_id","currencyScaleId","控制ID  主键，自增长字段");

	/**
	 * 计划生效时间  计划开始生效时间 | datetime
	 */
	public final DateTableField<Date> beginTime = new DateTableFieldImpl<Date>(this,"begin_time","beginTime","计划生效时间  计划开始生效时间");

	/**
	 * 周期的规模 累计售出的金额不能大于本值 | decimal(16,2)
	 */
	public final TableField<BigDecimal> scale = new TableFieldImpl<BigDecimal>(this,"scale","scale","周期的规模 累计售出的金额不能大于本值");

	/**
	 * 是否已发放额度更新通知 | char(1)
	 */
	public final TableField<String> notified = new TableFieldImpl<String>(this,"notified","notified","是否已发放额度更新通知");

	/**
	 * 由谁创建  OMS操作人ID | int(11)
	 */
	public final TableField<Integer> createBy = new TableFieldImpl<Integer>(this,"create_by","createBy","由谁创建  OMS操作人ID");

	/**
	 * 由谁更改  OMS操作人ID | int(11)
	 */
	public final TableField<Integer> updateBy = new TableFieldImpl<Integer>(this,"update_by","updateBy","由谁更改  OMS操作人ID");

	/**
	 * 记录创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","记录创建时间");

	/**
	 * 记录修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","记录修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {currencyScaleId,beginTime,scale,notified,createBy,updateBy,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TFprdCurrencyScale[table=fprd_currency_scale]";
	}
}
