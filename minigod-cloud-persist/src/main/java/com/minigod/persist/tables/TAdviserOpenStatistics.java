package com.minigod.persist.tables;
import com.minigod.db4j.table.AllField;
import com.minigod.db4j.table.AbstractTable;
import com.minigod.db4j.table.TableField;
import com.minigod.db4j.table.TableFieldImpl;
import java.util.HashMap;
import java.util.Map;
import java.util.Date;
import com.minigod.db4j.table.DateTableField;
import com.minigod.db4j.table.DateTableFieldImpl;

public class TAdviserOpenStatistics extends AbstractTable {

	static {
		init();
	}

	private TAdviserOpenStatistics(){
		super.tableName = "adviser_open_statistics";
	}

	private TAdviserOpenStatistics(String aliasName){
		this();
		setAliasName(aliasName);
	}

	public static final TAdviserOpenStatistics getInstance() {
		return new TAdviserOpenStatistics();
	}

	public static final TAdviserOpenStatistics getInstance(String aliasName) {
		return new TAdviserOpenStatistics(aliasName);
	}

	private static Map<String, String> allFieldMap;
	private static final void init() {
		allFieldMap = new HashMap<String, String>();
		allFieldMap.put("adviserOpenStatsId", "adviser_open_stats_id");
		allFieldMap.put("adviserUserId", "adviser_user_id");
		allFieldMap.put("userId", "user_id");
		allFieldMap.put("times", "times");
		allFieldMap.put("openUrl", "open_url");
		allFieldMap.put("createTime", "create_time");
		allFieldMap.put("updateTime", "update_time");
	}

	public String getFieldName(String javaFieldName) {
		return allFieldMap.get(javaFieldName);
	}

	public final TableField<Integer> all = new AllField<Integer>(this,  "*",null);

	public TableField<?> allField() {
		return all;
	}

	/**
	 *  | int(11)
	 */
	public final TableField<Integer>  pk = new TableFieldImpl<Integer>(this,"adviser_open_stats_id","adviserOpenStatsId","");
	public final TableField<Integer> adviserOpenStatsId = new TableFieldImpl<Integer>(this,"adviser_open_stats_id","adviserOpenStatsId","");

	/**
	 * 投顾用户id | int(11)
	 */
	public final TableField<Integer> adviserUserId = new TableFieldImpl<Integer>(this,"adviser_user_id","adviserUserId","投顾用户id");

	/**
	 * 用户id | int(11)
	 */
	public final TableField<Integer> userId = new TableFieldImpl<Integer>(this,"user_id","userId","用户id");

	/**
	 * 次数 | int(11)
	 */
	public final TableField<Integer> times = new TableFieldImpl<Integer>(this,"times","times","次数");

	/**
	 * 开户url | varchar(250)
	 */
	public final TableField<String> openUrl = new TableFieldImpl<String>(this,"open_url","openUrl","开户url");

	/**
	 * 创建时间 | datetime
	 */
	public final DateTableField<Date> createTime = new DateTableFieldImpl<Date>(this,"create_time","createTime","创建时间");

	/**
	 * 修改时间 | datetime
	 */
	public final DateTableField<Date> updateTime = new DateTableFieldImpl<Date>(this,"update_time","updateTime","修改时间");

	private final TableField<?>[] allFields = new TableField<?>[] {adviserOpenStatsId,adviserUserId,userId,times,openUrl,createTime,updateTime};

	public TableField<?>[] getAllFields() {
		return allFields;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getPK() {
		return pk;
	}

	@SuppressWarnings("unchecked")
	public TableField<?> getLockVersion() {
		return null;
	}

	public final boolean isAutoGeneratedPK() {
		return true;
	}

	public final boolean isLockVersion() {
		return false;
	}

	public String toString() {
		return "TAdviserOpenStatistics[table=adviser_open_statistics]";
	}
}
