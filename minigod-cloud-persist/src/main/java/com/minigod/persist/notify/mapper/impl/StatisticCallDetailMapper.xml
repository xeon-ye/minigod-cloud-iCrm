<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.persist.notify.mapper.StatisticCallDetailMapper">
  <resultMap id="BaseResultMap" type="com.minigod.protocol.notify.model.StatisticCallDetail">
    <!--@mbg.generated-->
    <!--@Table statistic_call_detail-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="u_id" jdbcType="VARCHAR" property="uId" />
    <result column="module_type" jdbcType="CHAR" property="moduleType" />
    <result column="opt_time" jdbcType="TIMESTAMP" property="optTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, u_id, module_type, opt_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from statistic_call_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from statistic_call_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.StatisticCallDetail" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into statistic_call_detail (u_id, module_type, opt_time, 
      create_time, update_time)
    values (#{uId,jdbcType=VARCHAR}, #{moduleType,jdbcType=CHAR}, #{optTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.StatisticCallDetail" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into statistic_call_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        u_id,
      </if>
      <if test="moduleType != null">
        module_type,
      </if>
      <if test="optTime != null">
        opt_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uId != null">
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        #{moduleType,jdbcType=CHAR},
      </if>
      <if test="optTime != null">
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minigod.protocol.notify.model.StatisticCallDetail">
    <!--@mbg.generated-->
    update statistic_call_detail
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        module_type = #{moduleType,jdbcType=CHAR},
      </if>
      <if test="optTime != null">
        opt_time = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minigod.protocol.notify.model.StatisticCallDetail">
    <!--@mbg.generated-->
    update statistic_call_detail
    set u_id = #{uId,jdbcType=VARCHAR},
      module_type = #{moduleType,jdbcType=CHAR},
      opt_time = #{optTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update statistic_call_detail
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="u_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.uId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="module_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.moduleType,jdbcType=CHAR}
        </foreach>
      </trim>
      <trim prefix="opt_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.optTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into statistic_call_detail
    (u_id, module_type, opt_time, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.uId,jdbcType=VARCHAR}, #{item.moduleType,jdbcType=CHAR}, #{item.optTime,jdbcType=TIMESTAMP}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.StatisticCallDetail" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into statistic_call_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      u_id,
      module_type,
      opt_time,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{uId,jdbcType=VARCHAR},
      #{moduleType,jdbcType=CHAR},
      #{optTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      u_id = #{uId,jdbcType=VARCHAR},
      module_type = #{moduleType,jdbcType=CHAR},
      opt_time = #{optTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.StatisticCallDetail" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into statistic_call_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="moduleType != null">
        module_type,
      </if>
      <if test="optTime != null">
        opt_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        #{moduleType,jdbcType=CHAR},
      </if>
      <if test="optTime != null">
        #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="moduleType != null">
        module_type = #{moduleType,jdbcType=CHAR},
      </if>
      <if test="optTime != null">
        opt_time = #{optTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>