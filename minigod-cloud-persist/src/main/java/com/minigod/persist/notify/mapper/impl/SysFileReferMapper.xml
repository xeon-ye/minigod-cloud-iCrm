<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.persist.notify.mapper.SysFileReferMapper">
  <resultMap id="BaseResultMap" type="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    <!--@Table sys_file_refer-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="refer_id" jdbcType="INTEGER" property="referId" />
    <result column="storage_id" jdbcType="INTEGER" property="storageId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_suffix" jdbcType="VARCHAR" property="fileSuffix" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, refer_id, storage_id, file_name, file_suffix, file_path, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_file_refer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sys_file_refer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.SysFileRefer" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_file_refer (refer_id, storage_id, file_name, 
      file_suffix, file_path, create_time, 
      update_time)
    values (#{referId,jdbcType=INTEGER}, #{storageId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, 
      #{fileSuffix,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.SysFileRefer" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_file_refer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="referId != null">
        refer_id,
      </if>
      <if test="storageId != null">
        storage_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSuffix != null">
        file_suffix,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="referId != null">
        #{referId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    update sys_file_refer
    <set>
      <if test="referId != null">
        refer_id = #{referId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        storage_id = #{storageId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    update sys_file_refer
    set refer_id = #{referId,jdbcType=INTEGER},
      storage_id = #{storageId,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_file_refer
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="refer_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.referId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="storage_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.storageId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="file_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.fileName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="file_suffix = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.fileSuffix,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="file_path = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.filePath,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_file_refer
    (refer_id, storage_id, file_name, file_suffix, file_path, create_time, update_time
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.referId,jdbcType=INTEGER}, #{item.storageId,jdbcType=INTEGER}, #{item.fileName,jdbcType=VARCHAR}, 
        #{item.fileSuffix,jdbcType=VARCHAR}, #{item.filePath,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.SysFileRefer" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_file_refer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      refer_id,
      storage_id,
      file_name,
      file_suffix,
      file_path,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{referId,jdbcType=INTEGER},
      #{storageId,jdbcType=INTEGER},
      #{fileName,jdbcType=VARCHAR},
      #{fileSuffix,jdbcType=VARCHAR},
      #{filePath,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      refer_id = #{referId,jdbcType=INTEGER},
      storage_id = #{storageId,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.minigod.protocol.notify.model.SysFileRefer" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_file_refer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="referId != null">
        refer_id,
      </if>
      <if test="storageId != null">
        storage_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSuffix != null">
        file_suffix,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="referId != null">
        #{referId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="referId != null">
        refer_id = #{referId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        storage_id = #{storageId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>