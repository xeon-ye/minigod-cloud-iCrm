<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minigod.persist.notify.mapper.SysFileReferMapper">
  <resultMap id="BaseResultMap" type="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    <!--@Table sys_file_refer-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="refer_id" jdbcType="INTEGER" property="referId" />
    <result column="storage_id" jdbcType="INTEGER" property="storageId" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, refer_id, storage_id, file_path, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_file_refer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sys_file_refer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    insert into sys_file_refer (id, refer_id, storage_id, 
      file_path, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{referId,jdbcType=INTEGER}, #{storageId,jdbcType=INTEGER}, 
      #{filePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    insert into sys_file_refer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="referId != null">
        refer_id,
      </if>
      <if test="storageId != null">
        storage_id,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="referId != null">
        #{referId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    update sys_file_refer
    <set>
      <if test="referId != null">
        refer_id = #{referId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null">
        storage_id = #{storageId,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.minigod.protocol.notify.model.SysFileRefer">
    <!--@mbg.generated-->
    update sys_file_refer
    set refer_id = #{referId,jdbcType=INTEGER},
      storage_id = #{storageId,jdbcType=INTEGER},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>